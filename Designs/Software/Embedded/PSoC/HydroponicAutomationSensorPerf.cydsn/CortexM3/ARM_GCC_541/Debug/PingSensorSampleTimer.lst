ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PingSensorSampleTimer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PingSensorSampleTimer_initVar
  20              		.bss
  21              		.type	PingSensorSampleTimer_initVar, %object
  22              		.size	PingSensorSampleTimer_initVar, 1
  23              	PingSensorSampleTimer_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PingSensorSampleTimer_Init,"ax",%progbits
  26              		.align	2
  27              		.global	PingSensorSampleTimer_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	PingSensorSampleTimer_Init, %function
  31              	PingSensorSampleTimer_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PingSensorSampleTimer.c"
   1:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * File Name: PingSensorSampleTimer.c
   3:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Version 2.80
   4:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
   5:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Description:
   6:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
  15:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Note:
  16:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
  17:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  24:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #include "PingSensorSampleTimer.h"
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 2


  25:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  26:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint8 PingSensorSampleTimer_initVar = 0u;
  27:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  28:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  29:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_Init
  31:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
  33:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
  34:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
  36:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
  37:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
  38:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
  39:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
  40:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
  41:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
  42:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_Init(void) 
  44:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if(!PingSensorSampleTimer_UsingFixedFunction)
  46:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             uint8 PingSensorSampleTimer_interruptState;
  48:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  50:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (PingSensorSampleTimer_UsingFixedFunction)
  51:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL &= PingSensorSampleTimer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  54:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             PingSensorSampleTimer_CONTROL2 &= ((uint8)(~PingSensorSampleTimer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  59:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             PingSensorSampleTimer_CONTROL3 &= ((uint8)(~PingSensorSampleTimer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  63:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             PingSensorSampleTimer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  69:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_RunModeUsed == 2)
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 3


  70:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  76:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  82:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  84:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL2 |= PingSensorSampleTimer_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  90:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL3 &= ((uint8)(~PingSensorSampleTimer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL3 |= PingSensorSampleTimer_CTRL_RCOD;
  94:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  95:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL3 &= ((uint8)(~PingSensorSampleTimer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL3 |= PingSensorSampleTimer_CTRL_ENBL;
  98:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
  99:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 PingSensorSampleTimer_CONTROL3 |= PingSensorSampleTimer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 103:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 105:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_RT1 &= ((uint8)(~PingSensorSampleTimer_RT1_MASK));
 107:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_RT1 |= PingSensorSampleTimer_SYNC;
 108:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 109:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_RT1 &= ((uint8)(~PingSensorSampleTimer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_RT1 |= PingSensorSampleTimer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 113:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL2 |= PingSensorSampleTimer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 117:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     PingSensorSampleTimer_WritePeriod(PingSensorSampleTimer_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 44F61F60 		movw	r0, #19999
  48 000a FFF7FEFF 		bl	PingSensorSampleTimer_WritePeriod
 119:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     PingSensorSampleTimer_WriteCounter(PingSensorSampleTimer_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000e 44F61F60 		movw	r0, #19999
  51 0012 FFF7FEFF 		bl	PingSensorSampleTimer_WriteCounter
 120:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 4


 121:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (PingSensorSampleTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CAPTURE_COUNT_CTRL |= PingSensorSampleTimer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_SetCaptureCount(PingSensorSampleTimer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 126:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UsingFixedFunction)
 127:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             PingSensorSampleTimer_SetCaptureMode(PingSensorSampleTimer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 131:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 if (0u == (PingSensorSampleTimer_CONTROL & PingSensorSampleTimer__B_TIMER__TM_SOFTW
 134:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 {
 135:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                     PingSensorSampleTimer_SetTriggerMode(PingSensorSampleTimer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/PingSensorSampleTimer.c ****                 }
 137:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             #endif /* (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 140:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_interruptState = CyEnterCriticalSection();
  52              		.loc 1 142 0
  53 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  54 001a 0346     		mov	r3, r0
  55 001c FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 144:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_STATUS_AUX_CTRL |= PingSensorSampleTimer_STATUS_ACTL_INT_EN_MASK;
  56              		.loc 1 145 0
  57 001e 0A4A     		ldr	r2, .L2
  58 0020 094B     		ldr	r3, .L2
  59 0022 1B78     		ldrb	r3, [r3]
  60 0024 DBB2     		uxtb	r3, r3
  61 0026 43F01003 		orr	r3, r3, #16
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 147:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         CyExitCriticalSection(PingSensorSampleTimer_interruptState);
  64              		.loc 1 148 0
  65 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0030 1846     		mov	r0, r3
  67 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 150:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_EnableTriggerMode)
 151:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             PingSensorSampleTimer_EnableTrigger();
 152:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 		
 154:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 		
 155:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #if (PingSensorSampleTimer_InterruptOnCaptureCount && !PingSensorSampleTimer_UDB_CONTROL_RE
 156:Generated_Source\PSoC5/PingSensorSampleTimer.c ****             PingSensorSampleTimer_SetInterruptCount(PingSensorSampleTimer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 159:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_ClearFIFO();
  68              		.loc 1 159 0
  69 0036 FFF7FEFF 		bl	PingSensorSampleTimer_ClearFIFO
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 5


 160:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 162:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     PingSensorSampleTimer_SetInterruptMode(PingSensorSampleTimer_INIT_INTERRUPT_MODE);
  70              		.loc 1 162 0
  71 003a 0020     		movs	r0, #0
  72 003c FFF7FEFF 		bl	PingSensorSampleTimer_SetInterruptMode
 163:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
  73              		.loc 1 163 0
  74 0040 00BF     		nop
  75 0042 0837     		adds	r7, r7, #8
  76              		.cfi_def_cfa_offset 8
  77 0044 BD46     		mov	sp, r7
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 96650040 		.word	1073767830
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	PingSensorSampleTimer_Init, .-PingSensorSampleTimer_Init
  88              		.section	.text.PingSensorSampleTimer_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	PingSensorSampleTimer_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	PingSensorSampleTimer_Enable, %function
  94              	PingSensorSampleTimer_Enable:
  95              	.LFB1:
 164:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 165:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 166:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_Enable
 168:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 170:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 171:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 173:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 174:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 175:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 176:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 177:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 178:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 179:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_Enable(void) 
 181:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
  96              		.loc 1 181 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 6


 105              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (PingSensorSampleTimer_UsingFixedFunction)
 184:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_GLOBAL_ENABLE |= PingSensorSampleTimer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_GLOBAL_STBY_ENABLE |= PingSensorSampleTimer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 188:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED || PingSensorSampleTimer_UsingFixedFunction
 190:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL |= PingSensorSampleTimer_CTRL_ENABLE;
 106              		.loc 1 190 0
 107 0004 054A     		ldr	r2, .L5
 108 0006 054B     		ldr	r3, .L5
 109 0008 1B78     		ldrb	r3, [r3]
 110 000a DBB2     		uxtb	r3, r3
 111 000c 63F07F03 		orn	r3, r3, #127
 112 0010 DBB2     		uxtb	r3, r3
 113 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 114              		.loc 1 192 0
 115 0014 00BF     		nop
 116 0016 BD46     		mov	sp, r7
 117              		.cfi_def_cfa_register 13
 118              		@ sp needed
 119 0018 80BC     		pop	{r7}
 120              		.cfi_restore 7
 121              		.cfi_def_cfa_offset 0
 122 001a 7047     		bx	lr
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 001c 74650040 		.word	1073767796
 127              		.cfi_endproc
 128              	.LFE1:
 129              		.size	PingSensorSampleTimer_Enable, .-PingSensorSampleTimer_Enable
 130              		.section	.text.PingSensorSampleTimer_Start,"ax",%progbits
 131              		.align	2
 132              		.global	PingSensorSampleTimer_Start
 133              		.thumb
 134              		.thumb_func
 135              		.type	PingSensorSampleTimer_Start, %function
 136              	PingSensorSampleTimer_Start:
 137              	.LFB2:
 193:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 194:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 195:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_Start
 197:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 199:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 200:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 204:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 205:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 7


 206:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 207:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 208:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 209:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 210:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Global variables:
 211:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  PingSensorSampleTimer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 214:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_Start(void) 
 216:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 138              		.loc 1 216 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     if(PingSensorSampleTimer_initVar == 0u)
 148              		.loc 1 217 0
 149 0004 064B     		ldr	r3, .L9
 150 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 151 0008 002B     		cmp	r3, #0
 152 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     {
 219:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_Init();
 153              		.loc 1 219 0
 154 000c FFF7FEFF 		bl	PingSensorSampleTimer_Init
 220:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 221:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_initVar = 1u;   /* Clear this bit for Initialization */
 155              		.loc 1 221 0
 156 0010 034B     		ldr	r3, .L9
 157 0012 0122     		movs	r2, #1
 158 0014 1A70     		strb	r2, [r3]
 159              	.L8:
 222:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     }
 223:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 224:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     PingSensorSampleTimer_Enable();
 160              		.loc 1 225 0
 161 0016 FFF7FEFF 		bl	PingSensorSampleTimer_Enable
 226:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 162              		.loc 1 226 0
 163 001a 00BF     		nop
 164 001c 80BD     		pop	{r7, pc}
 165              	.L10:
 166 001e 00BF     		.align	2
 167              	.L9:
 168 0020 00000000 		.word	PingSensorSampleTimer_initVar
 169              		.cfi_endproc
 170              	.LFE2:
 171              		.size	PingSensorSampleTimer_Start, .-PingSensorSampleTimer_Start
 172              		.section	.text.PingSensorSampleTimer_Stop,"ax",%progbits
 173              		.align	2
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 8


 174              		.global	PingSensorSampleTimer_Stop
 175              		.thumb
 176              		.thumb_func
 177              		.type	PingSensorSampleTimer_Stop, %function
 178              	PingSensorSampleTimer_Stop:
 179              	.LFB3:
 227:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 228:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 229:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_Stop
 231:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 233:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 234:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  interrupts.
 236:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 237:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 238:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 239:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 240:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 241:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 242:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 243:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 246:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_Stop(void) 
 248:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 180              		.loc 1 248 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 80B4     		push	{r7}
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if(!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED || PingSensorSampleTimer_UsingFixedFunction)
 251:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL &= ((uint8)(~PingSensorSampleTimer_CTRL_ENABLE));
 190              		.loc 1 251 0
 191 0004 054A     		ldr	r2, .L12
 192 0006 054B     		ldr	r3, .L12
 193 0008 1B78     		ldrb	r3, [r3]
 194 000a DBB2     		uxtb	r3, r3
 195 000c 03F07F03 		and	r3, r3, #127
 196 0010 DBB2     		uxtb	r3, r3
 197 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 254:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (PingSensorSampleTimer_UsingFixedFunction)
 256:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_GLOBAL_ENABLE &= ((uint8)(~PingSensorSampleTimer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~PingSensorSampleTimer_BLOCK_STBY_EN_M
 258:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 9


 198              		.loc 1 259 0
 199 0014 00BF     		nop
 200 0016 BD46     		mov	sp, r7
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 0018 80BC     		pop	{r7}
 204              		.cfi_restore 7
 205              		.cfi_def_cfa_offset 0
 206 001a 7047     		bx	lr
 207              	.L13:
 208              		.align	2
 209              	.L12:
 210 001c 74650040 		.word	1073767796
 211              		.cfi_endproc
 212              	.LFE3:
 213              		.size	PingSensorSampleTimer_Stop, .-PingSensorSampleTimer_Stop
 214              		.section	.text.PingSensorSampleTimer_SetInterruptMode,"ax",%progbits
 215              		.align	2
 216              		.global	PingSensorSampleTimer_SetInterruptMode
 217              		.thumb
 218              		.thumb_func
 219              		.type	PingSensorSampleTimer_SetInterruptMode, %function
 220              	PingSensorSampleTimer_SetInterruptMode:
 221              	.LFB4:
 260:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 261:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 262:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_SetInterruptMode
 264:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 266:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 267:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  be selected.
 270:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 271:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 272:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 275:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 276:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 277:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 278:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 222              		.loc 1 280 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 10


 234 0006 0346     		mov	r3, r0
 235 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     PingSensorSampleTimer_STATUS_MASK = interruptMode;
 236              		.loc 1 281 0
 237 000a 044A     		ldr	r2, .L15
 238 000c FB79     		ldrb	r3, [r7, #7]
 239 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 240              		.loc 1 282 0
 241 0010 00BF     		nop
 242 0012 0C37     		adds	r7, r7, #12
 243              		.cfi_def_cfa_offset 4
 244 0014 BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 0016 80BC     		pop	{r7}
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0018 7047     		bx	lr
 251              	.L16:
 252 001a 00BF     		.align	2
 253              	.L15:
 254 001c 86650040 		.word	1073767814
 255              		.cfi_endproc
 256              	.LFE4:
 257              		.size	PingSensorSampleTimer_SetInterruptMode, .-PingSensorSampleTimer_SetInterruptMode
 258              		.section	.text.PingSensorSampleTimer_SoftwareCapture,"ax",%progbits
 259              		.align	2
 260              		.global	PingSensorSampleTimer_SoftwareCapture
 261              		.thumb
 262              		.thumb_func
 263              		.type	PingSensorSampleTimer_SoftwareCapture, %function
 264              	PingSensorSampleTimer_SoftwareCapture:
 265              	.LFB5:
 283:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 284:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 285:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_SoftwareCapture
 287:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 289:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 290:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 292:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 293:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 294:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 295:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 296:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 297:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 298:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Side Effects:
 299:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 301:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 266              		.loc 1 303 0
 267              		.cfi_startproc
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 11


 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 80B4     		push	{r7}
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if(PingSensorSampleTimer_UsingFixedFunction)
 306:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         (void)CY_GET_REG16(PingSensorSampleTimer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 308:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         (void)CY_GET_REG8(PingSensorSampleTimer_COUNTER_LSB_PTR_8BIT);
 276              		.loc 1 308 0
 277 0004 024B     		ldr	r3, .L18
 278 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif/* (PingSensorSampleTimer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 279              		.loc 1 311 0
 280 0008 00BF     		nop
 281 000a BD46     		mov	sp, r7
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 000c 80BC     		pop	{r7}
 285              		.cfi_restore 7
 286              		.cfi_def_cfa_offset 0
 287 000e 7047     		bx	lr
 288              	.L19:
 289              		.align	2
 290              	.L18:
 291 0010 04650040 		.word	1073767684
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	PingSensorSampleTimer_SoftwareCapture, .-PingSensorSampleTimer_SoftwareCapture
 295              		.section	.text.PingSensorSampleTimer_ReadStatusRegister,"ax",%progbits
 296              		.align	2
 297              		.global	PingSensorSampleTimer_ReadStatusRegister
 298              		.thumb
 299              		.thumb_func
 300              		.type	PingSensorSampleTimer_ReadStatusRegister, %function
 301              	PingSensorSampleTimer_ReadStatusRegister:
 302              	.LFB6:
 312:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 313:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 314:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ReadStatusRegister
 316:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 318:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 319:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 323:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 324:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 325:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 12


 326:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 327:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 329:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Side Effects:
 330:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 332:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint8   PingSensorSampleTimer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 303              		.loc 1 334 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     return (PingSensorSampleTimer_STATUS);
 313              		.loc 1 335 0
 314 0004 034B     		ldr	r3, .L22
 315 0006 1B78     		ldrb	r3, [r3]
 316 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 317              		.loc 1 336 0
 318 000a 1846     		mov	r0, r3
 319 000c BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 000e 80BC     		pop	{r7}
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 0010 7047     		bx	lr
 326              	.L23:
 327 0012 00BF     		.align	2
 328              	.L22:
 329 0014 66650040 		.word	1073767782
 330              		.cfi_endproc
 331              	.LFE6:
 332              		.size	PingSensorSampleTimer_ReadStatusRegister, .-PingSensorSampleTimer_ReadStatusRegister
 333              		.section	.text.PingSensorSampleTimer_ReadControlRegister,"ax",%progbits
 334              		.align	2
 335              		.global	PingSensorSampleTimer_ReadControlRegister
 336              		.thumb
 337              		.thumb_func
 338              		.type	PingSensorSampleTimer_ReadControlRegister, %function
 339              	PingSensorSampleTimer_ReadControlRegister:
 340              	.LFB7:
 337:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 338:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 339:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 341:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 342:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ReadControlRegister
 344:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 13


 345:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 346:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 347:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 349:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 350:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 351:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 352:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 353:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 355:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint8 PingSensorSampleTimer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 341              		.loc 1 357 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         return ((uint8)PingSensorSampleTimer_CONTROL);
 351              		.loc 1 359 0
 352 0004 034B     		ldr	r3, .L26
 353 0006 1B78     		ldrb	r3, [r3]
 354 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 361:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         return (0);
 362:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 355              		.loc 1 363 0
 356 000a 1846     		mov	r0, r3
 357 000c BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 000e 80BC     		pop	{r7}
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0010 7047     		bx	lr
 364              	.L27:
 365 0012 00BF     		.align	2
 366              	.L26:
 367 0014 74650040 		.word	1073767796
 368              		.cfi_endproc
 369              	.LFE7:
 370              		.size	PingSensorSampleTimer_ReadControlRegister, .-PingSensorSampleTimer_ReadControlRegister
 371              		.section	.text.PingSensorSampleTimer_WriteControlRegister,"ax",%progbits
 372              		.align	2
 373              		.global	PingSensorSampleTimer_WriteControlRegister
 374              		.thumb
 375              		.thumb_func
 376              		.type	PingSensorSampleTimer_WriteControlRegister, %function
 377              	PingSensorSampleTimer_WriteControlRegister:
 378              	.LFB8:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 14


 364:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 365:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 366:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_WriteControlRegister
 368:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 370:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 371:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 373:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 374:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 376:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 377:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 378:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 379              		.loc 1 380 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 83B0     		sub	sp, sp, #12
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 391 0006 0346     		mov	r3, r0
 392 0008 FB71     		strb	r3, [r7, #7]
 381:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL = control;
 393              		.loc 1 382 0
 394 000a 044A     		ldr	r2, .L29
 395 000c FB79     		ldrb	r3, [r7, #7]
 396 000e 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 384:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         control = 0u;
 385:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 397              		.loc 1 386 0
 398 0010 00BF     		nop
 399 0012 0C37     		adds	r7, r7, #12
 400              		.cfi_def_cfa_offset 4
 401 0014 BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 0016 80BC     		pop	{r7}
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0018 7047     		bx	lr
 408              	.L30:
 409 001a 00BF     		.align	2
 410              	.L29:
 411 001c 74650040 		.word	1073767796
 412              		.cfi_endproc
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 15


 413              	.LFE8:
 414              		.size	PingSensorSampleTimer_WriteControlRegister, .-PingSensorSampleTimer_WriteControlRegister
 415              		.section	.text.PingSensorSampleTimer_ReadPeriod,"ax",%progbits
 416              		.align	2
 417              		.global	PingSensorSampleTimer_ReadPeriod
 418              		.thumb
 419              		.thumb_func
 420              		.type	PingSensorSampleTimer_ReadPeriod, %function
 421              	PingSensorSampleTimer_ReadPeriod:
 422              	.LFB9:
 387:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 388:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 390:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 391:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ReadPeriod
 393:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 395:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 396:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 398:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 399:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 400:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 401:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 402:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 404:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint32 PingSensorSampleTimer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 423              		.loc 1 406 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428 0000 80B4     		push	{r7}
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 0002 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #if(PingSensorSampleTimer_UsingFixedFunction)
 408:Generated_Source\PSoC5/PingSensorSampleTimer.c ****        return ((uint32)CY_GET_REG16(PingSensorSampleTimer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #else
 410:Generated_Source\PSoC5/PingSensorSampleTimer.c ****        return (CY_GET_REG24(PingSensorSampleTimer_PERIOD_LSB_PTR));
 433              		.loc 1 410 0
 434 0004 034B     		ldr	r3, .L33
 435 0006 1B68     		ldr	r3, [r3]
 436 0008 23F07F43 		bic	r3, r3, #-16777216
 411:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #endif /* (PingSensorSampleTimer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 437              		.loc 1 412 0
 438 000c 1846     		mov	r0, r3
 439 000e BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 0010 80BC     		pop	{r7}
 443              		.cfi_restore 7
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 16


 444              		.cfi_def_cfa_offset 0
 445 0012 7047     		bx	lr
 446              	.L34:
 447              		.align	2
 448              	.L33:
 449 0014 24650040 		.word	1073767716
 450              		.cfi_endproc
 451              	.LFE9:
 452              		.size	PingSensorSampleTimer_ReadPeriod, .-PingSensorSampleTimer_ReadPeriod
 453              		.section	.text.PingSensorSampleTimer_WritePeriod,"ax",%progbits
 454              		.align	2
 455              		.global	PingSensorSampleTimer_WritePeriod
 456              		.thumb
 457              		.thumb_func
 458              		.type	PingSensorSampleTimer_WritePeriod, %function
 459              	PingSensorSampleTimer_WritePeriod:
 460              	.LFB10:
 413:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 414:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 415:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_WritePeriod
 417:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 419:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 420:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 423:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 424:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 427:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 428:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 429:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 430:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 461              		.loc 1 432 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 82B0     		sub	sp, sp, #8
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 7860     		str	r0, [r7, #4]
 433:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if(PingSensorSampleTimer_UsingFixedFunction)
 434:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         CY_SET_REG16(PingSensorSampleTimer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 437:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         CY_SET_REG24(PingSensorSampleTimer_PERIOD_LSB_PTR, period);
 474              		.loc 1 437 0
 475 0008 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 17


 476 000a 0348     		ldr	r0, .L36
 477 000c FFF7FEFF 		bl	CySetReg24
 438:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 478              		.loc 1 439 0
 479 0010 00BF     		nop
 480 0012 0837     		adds	r7, r7, #8
 481              		.cfi_def_cfa_offset 8
 482 0014 BD46     		mov	sp, r7
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 0016 80BD     		pop	{r7, pc}
 486              	.L37:
 487              		.align	2
 488              	.L36:
 489 0018 24650040 		.word	1073767716
 490              		.cfi_endproc
 491              	.LFE10:
 492              		.size	PingSensorSampleTimer_WritePeriod, .-PingSensorSampleTimer_WritePeriod
 493              		.section	.text.PingSensorSampleTimer_ReadCapture,"ax",%progbits
 494              		.align	2
 495              		.global	PingSensorSampleTimer_ReadCapture
 496              		.thumb
 497              		.thumb_func
 498              		.type	PingSensorSampleTimer_ReadCapture, %function
 499              	PingSensorSampleTimer_ReadCapture:
 500              	.LFB11:
 440:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 441:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 442:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ReadCapture
 444:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 446:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 447:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 449:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 450:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 451:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 452:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 453:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 455:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint32 PingSensorSampleTimer_ReadCapture(void) 
 457:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 501              		.loc 1 457 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #if(PingSensorSampleTimer_UsingFixedFunction)
 459:Generated_Source\PSoC5/PingSensorSampleTimer.c ****        return ((uint32)CY_GET_REG16(PingSensorSampleTimer_CAPTURE_LSB_PTR));
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 18


 460:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #else
 461:Generated_Source\PSoC5/PingSensorSampleTimer.c ****        return (CY_GET_REG24(PingSensorSampleTimer_CAPTURE_LSB_PTR));
 511              		.loc 1 461 0
 512 0004 034B     		ldr	r3, .L40
 513 0006 1B68     		ldr	r3, [r3]
 514 0008 23F07F43 		bic	r3, r3, #-16777216
 462:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #endif /* (PingSensorSampleTimer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 515              		.loc 1 463 0
 516 000c 1846     		mov	r0, r3
 517 000e BD46     		mov	sp, r7
 518              		.cfi_def_cfa_register 13
 519              		@ sp needed
 520 0010 80BC     		pop	{r7}
 521              		.cfi_restore 7
 522              		.cfi_def_cfa_offset 0
 523 0012 7047     		bx	lr
 524              	.L41:
 525              		.align	2
 526              	.L40:
 527 0014 44650040 		.word	1073767748
 528              		.cfi_endproc
 529              	.LFE11:
 530              		.size	PingSensorSampleTimer_ReadCapture, .-PingSensorSampleTimer_ReadCapture
 531              		.section	.text.PingSensorSampleTimer_WriteCounter,"ax",%progbits
 532              		.align	2
 533              		.global	PingSensorSampleTimer_WriteCounter
 534              		.thumb
 535              		.thumb_func
 536              		.type	PingSensorSampleTimer_WriteCounter, %function
 537              	PingSensorSampleTimer_WriteCounter:
 538              	.LFB12:
 464:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 465:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 466:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_WriteCounter
 468:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 470:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 471:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 473:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 474:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 476:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 477:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 478:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 479:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 539              		.loc 1 481 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 19


 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 7860     		str	r0, [r7, #4]
 482:Generated_Source\PSoC5/PingSensorSampleTimer.c ****    #if(PingSensorSampleTimer_UsingFixedFunction)
 483:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/PingSensorSampleTimer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/PingSensorSampleTimer.c ****          */
 486:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         CY_SET_REG16(PingSensorSampleTimer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         
 488:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 489:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         CY_SET_REG24(PingSensorSampleTimer_COUNTER_LSB_PTR, counter);
 552              		.loc 1 489 0
 553 0008 7968     		ldr	r1, [r7, #4]
 554 000a 0348     		ldr	r0, .L43
 555 000c FFF7FEFF 		bl	CySetReg24
 490:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 556              		.loc 1 491 0
 557 0010 00BF     		nop
 558 0012 0837     		adds	r7, r7, #8
 559              		.cfi_def_cfa_offset 8
 560 0014 BD46     		mov	sp, r7
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 0016 80BD     		pop	{r7, pc}
 564              	.L44:
 565              		.align	2
 566              	.L43:
 567 0018 04650040 		.word	1073767684
 568              		.cfi_endproc
 569              	.LFE12:
 570              		.size	PingSensorSampleTimer_WriteCounter, .-PingSensorSampleTimer_WriteCounter
 571              		.section	.text.PingSensorSampleTimer_ReadCounter,"ax",%progbits
 572              		.align	2
 573              		.global	PingSensorSampleTimer_ReadCounter
 574              		.thumb
 575              		.thumb_func
 576              		.type	PingSensorSampleTimer_ReadCounter, %function
 577              	PingSensorSampleTimer_ReadCounter:
 578              	.LFB13:
 492:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 493:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 494:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ReadCounter
 496:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 498:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 499:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 501:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 502:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 503:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 504:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 505:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Present compare value.
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 20


 506:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 507:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint32 PingSensorSampleTimer_ReadCounter(void) 
 509:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 579              		.loc 1 509 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584 0000 80B4     		push	{r7}
 585              		.cfi_def_cfa_offset 4
 586              		.cfi_offset 7, -4
 587 0002 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if(PingSensorSampleTimer_UsingFixedFunction)
 514:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         (void)CY_GET_REG16(PingSensorSampleTimer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 516:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         (void)CY_GET_REG8(PingSensorSampleTimer_COUNTER_LSB_PTR_8BIT);
 589              		.loc 1 516 0
 590 0004 044B     		ldr	r3, .L47
 591 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif/* (PingSensorSampleTimer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 519:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if(PingSensorSampleTimer_UsingFixedFunction)
 521:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         return ((uint32)CY_GET_REG16(PingSensorSampleTimer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #else
 523:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         return (CY_GET_REG24(PingSensorSampleTimer_CAPTURE_LSB_PTR));
 592              		.loc 1 523 0
 593 0008 044B     		ldr	r3, .L47+4
 594 000a 1B68     		ldr	r3, [r3]
 595 000c 23F07F43 		bic	r3, r3, #-16777216
 524:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* (PingSensorSampleTimer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 596              		.loc 1 525 0
 597 0010 1846     		mov	r0, r3
 598 0012 BD46     		mov	sp, r7
 599              		.cfi_def_cfa_register 13
 600              		@ sp needed
 601 0014 80BC     		pop	{r7}
 602              		.cfi_restore 7
 603              		.cfi_def_cfa_offset 0
 604 0016 7047     		bx	lr
 605              	.L48:
 606              		.align	2
 607              	.L47:
 608 0018 04650040 		.word	1073767684
 609 001c 44650040 		.word	1073767748
 610              		.cfi_endproc
 611              	.LFE13:
 612              		.size	PingSensorSampleTimer_ReadCounter, .-PingSensorSampleTimer_ReadCounter
 613              		.section	.text.PingSensorSampleTimer_ClearFIFO,"ax",%progbits
 614              		.align	2
 615              		.global	PingSensorSampleTimer_ClearFIFO
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 21


 616              		.thumb
 617              		.thumb_func
 618              		.type	PingSensorSampleTimer_ClearFIFO, %function
 619              	PingSensorSampleTimer_ClearFIFO:
 620              	.LFB14:
 526:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 527:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 528:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if(!PingSensorSampleTimer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 530:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     
 531:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/PingSensorSampleTimer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/PingSensorSampleTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/PingSensorSampleTimer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 536:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 537:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if (PingSensorSampleTimer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 539:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 540:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_SetCaptureMode
 542:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 544:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 545:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 547:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 548:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  #define PingSensorSampleTimer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #define PingSensorSampleTimer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #define PingSensorSampleTimer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #define PingSensorSampleTimer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #define PingSensorSampleTimer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/PingSensorSampleTimer.c ****  identifiers
 556:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  PingSensorSampleTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  PingSensorSampleTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  PingSensorSampleTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  PingSensorSampleTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 562:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 563:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 564:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 565:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 568:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     captureMode = ((uint8)((uint8)captureMode << PingSensorSampleTimer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     captureMode &= (PingSensorSampleTimer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 572:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL &= ((uint8)(~PingSensorSampleTimer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 576:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL |= captureMode;
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 22


 578:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 580:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 582:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 583:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if (PingSensorSampleTimer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 585:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 586:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_SetTriggerMode
 588:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 590:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 591:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 593:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 594:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #define PingSensorSampleTimer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #define PingSensorSampleTimer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #define PingSensorSampleTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #define PingSensorSampleTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #define PingSensorSampleTimer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 601:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 602:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 603:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 604:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 607:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     triggerMode &= PingSensorSampleTimer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 610:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register
 611:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     
 612:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL &= ((uint8)(~PingSensorSampleTimer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 615:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL |= (triggerMode | PingSensorSampleTimer__B_TIMER__TM_SOFTWARE
 617:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 619:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 621:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if (PingSensorSampleTimer_EnableTriggerMode)
 622:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 623:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 624:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_EnableTrigger
 626:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 628:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 629:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 631:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 632:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 633:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 634:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 23


 635:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 636:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 637:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 640:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register
 641:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL |= PingSensorSampleTimer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 644:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 645:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 646:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_DisableTrigger
 648:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 650:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 651:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 653:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 654:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 655:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 656:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 657:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 658:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 659:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 662:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control registe
 663:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL &= ((uint8)(~PingSensorSampleTimer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 666:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 668:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if(PingSensorSampleTimer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 670:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 671:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_SetInterruptCount
 673:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 675:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 676:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 678:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 679:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 684:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 685:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 686:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 687:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 690:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     interruptCount &= PingSensorSampleTimer_CTRL_INTCNT_MASK;
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 24


 692:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 693:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #if (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL &= ((uint8)(~PingSensorSampleTimer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         PingSensorSampleTimer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     #endif /* (!PingSensorSampleTimer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 700:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #endif /* PingSensorSampleTimer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 702:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 703:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #if (PingSensorSampleTimer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 705:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 706:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_SetCaptureCount
 708:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 710:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 711:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 713:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 714:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *                captures.
 717:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 718:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 719:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 720:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 721:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 724:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     PingSensorSampleTimer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 726:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 727:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 728:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ReadCaptureCount
 730:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 732:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 733:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 735:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 736:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 737:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 738:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 739:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 741:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/PingSensorSampleTimer.c **** uint8 PingSensorSampleTimer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 744:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     return ((uint8)PingSensorSampleTimer_CAP_COUNT);
 745:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 746:Generated_Source\PSoC5/PingSensorSampleTimer.c **** #endif /* PingSensorSampleTimer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
 748:Generated_Source\PSoC5/PingSensorSampleTimer.c **** 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 25


 749:Generated_Source\PSoC5/PingSensorSampleTimer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Function Name: PingSensorSampleTimer_ClearFIFO
 751:Generated_Source\PSoC5/PingSensorSampleTimer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 753:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Summary:
 754:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 756:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Parameters:
 757:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 758:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 759:Generated_Source\PSoC5/PingSensorSampleTimer.c **** * Return:
 760:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *  void
 761:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *
 762:Generated_Source\PSoC5/PingSensorSampleTimer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/PingSensorSampleTimer.c **** void PingSensorSampleTimer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/PingSensorSampleTimer.c **** {
 621              		.loc 1 764 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     while(0u != (PingSensorSampleTimer_ReadStatusRegister() & PingSensorSampleTimer_STATUS_FIFONEMP
 631              		.loc 1 765 0
 632 0004 01E0     		b	.L50
 633              	.L51:
 766:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     {
 767:Generated_Source\PSoC5/PingSensorSampleTimer.c ****         (void)PingSensorSampleTimer_ReadCapture();
 634              		.loc 1 767 0
 635 0006 FFF7FEFF 		bl	PingSensorSampleTimer_ReadCapture
 636              	.L50:
 765:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     while(0u != (PingSensorSampleTimer_ReadStatusRegister() & PingSensorSampleTimer_STATUS_FIFONEMP
 637              		.loc 1 765 0
 638 000a FFF7FEFF 		bl	PingSensorSampleTimer_ReadStatusRegister
 639 000e 0346     		mov	r3, r0
 640 0010 03F00803 		and	r3, r3, #8
 641 0014 002B     		cmp	r3, #0
 642 0016 F6D1     		bne	.L51
 768:Generated_Source\PSoC5/PingSensorSampleTimer.c ****     }
 769:Generated_Source\PSoC5/PingSensorSampleTimer.c **** }
 643              		.loc 1 769 0
 644 0018 00BF     		nop
 645 001a 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE14:
 648              		.size	PingSensorSampleTimer_ClearFIFO, .-PingSensorSampleTimer_ClearFIFO
 649              		.text
 650              	.Letext0:
 651              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 652              		.section	.debug_info,"",%progbits
 653              	.Ldebug_info0:
 654 0000 57020000 		.4byte	0x257
 655 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 26


 656 0006 00000000 		.4byte	.Ldebug_abbrev0
 657 000a 04       		.byte	0x4
 658 000b 01       		.uleb128 0x1
 659 000c 06000000 		.4byte	.LASF37
 660 0010 0C       		.byte	0xc
 661 0011 E9010000 		.4byte	.LASF38
 662 0015 2D010000 		.4byte	.LASF39
 663 0019 00000000 		.4byte	.Ldebug_ranges0+0
 664 001d 00000000 		.4byte	0
 665 0021 00000000 		.4byte	.Ldebug_line0
 666 0025 02       		.uleb128 0x2
 667 0026 01       		.byte	0x1
 668 0027 06       		.byte	0x6
 669 0028 65040000 		.4byte	.LASF0
 670 002c 02       		.uleb128 0x2
 671 002d 01       		.byte	0x1
 672 002e 08       		.byte	0x8
 673 002f 18020000 		.4byte	.LASF1
 674 0033 02       		.uleb128 0x2
 675 0034 02       		.byte	0x2
 676 0035 05       		.byte	0x5
 677 0036 DE030000 		.4byte	.LASF2
 678 003a 02       		.uleb128 0x2
 679 003b 02       		.byte	0x2
 680 003c 07       		.byte	0x7
 681 003d DA000000 		.4byte	.LASF3
 682 0041 02       		.uleb128 0x2
 683 0042 04       		.byte	0x4
 684 0043 05       		.byte	0x5
 685 0044 0A040000 		.4byte	.LASF4
 686 0048 02       		.uleb128 0x2
 687 0049 04       		.byte	0x4
 688 004a 07       		.byte	0x7
 689 004b 4D020000 		.4byte	.LASF5
 690 004f 02       		.uleb128 0x2
 691 0050 08       		.byte	0x8
 692 0051 05       		.byte	0x5
 693 0052 A1030000 		.4byte	.LASF6
 694 0056 02       		.uleb128 0x2
 695 0057 08       		.byte	0x8
 696 0058 07       		.byte	0x7
 697 0059 36030000 		.4byte	.LASF7
 698 005d 03       		.uleb128 0x3
 699 005e 04       		.byte	0x4
 700 005f 05       		.byte	0x5
 701 0060 696E7400 		.ascii	"int\000"
 702 0064 02       		.uleb128 0x2
 703 0065 04       		.byte	0x4
 704 0066 07       		.byte	0x7
 705 0067 29030000 		.4byte	.LASF8
 706 006b 04       		.uleb128 0x4
 707 006c 5F020000 		.4byte	.LASF9
 708 0070 02       		.byte	0x2
 709 0071 9201     		.2byte	0x192
 710 0073 2C000000 		.4byte	0x2c
 711 0077 04       		.uleb128 0x4
 712 0078 22030000 		.4byte	.LASF10
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 27


 713 007c 02       		.byte	0x2
 714 007d 9401     		.2byte	0x194
 715 007f 48000000 		.4byte	0x48
 716 0083 02       		.uleb128 0x2
 717 0084 04       		.byte	0x4
 718 0085 04       		.byte	0x4
 719 0086 DB010000 		.4byte	.LASF11
 720 008a 02       		.uleb128 0x2
 721 008b 08       		.byte	0x8
 722 008c 04       		.byte	0x4
 723 008d B6020000 		.4byte	.LASF12
 724 0091 02       		.uleb128 0x2
 725 0092 01       		.byte	0x1
 726 0093 08       		.byte	0x8
 727 0094 13040000 		.4byte	.LASF13
 728 0098 04       		.uleb128 0x4
 729 0099 26020000 		.4byte	.LASF14
 730 009d 02       		.byte	0x2
 731 009e 3C02     		.2byte	0x23c
 732 00a0 A4000000 		.4byte	0xa4
 733 00a4 05       		.uleb128 0x5
 734 00a5 6B000000 		.4byte	0x6b
 735 00a9 04       		.uleb128 0x4
 736 00aa 00000000 		.4byte	.LASF15
 737 00ae 02       		.byte	0x2
 738 00af 3E02     		.2byte	0x23e
 739 00b1 B5000000 		.4byte	0xb5
 740 00b5 05       		.uleb128 0x5
 741 00b6 77000000 		.4byte	0x77
 742 00ba 02       		.uleb128 0x2
 743 00bb 08       		.byte	0x8
 744 00bc 04       		.byte	0x4
 745 00bd 8C030000 		.4byte	.LASF16
 746 00c1 02       		.uleb128 0x2
 747 00c2 04       		.byte	0x4
 748 00c3 07       		.byte	0x7
 749 00c4 98030000 		.4byte	.LASF17
 750 00c8 06       		.uleb128 0x6
 751 00c9 12010000 		.4byte	.LASF21
 752 00cd 01       		.byte	0x1
 753 00ce 2B       		.byte	0x2b
 754 00cf 00000000 		.4byte	.LFB0
 755 00d3 4C000000 		.4byte	.LFE0-.LFB0
 756 00d7 01       		.uleb128 0x1
 757 00d8 9C       		.byte	0x9c
 758 00d9 EC000000 		.4byte	0xec
 759 00dd 07       		.uleb128 0x7
 760 00de ED000000 		.4byte	.LASF40
 761 00e2 01       		.byte	0x1
 762 00e3 2F       		.byte	0x2f
 763 00e4 6B000000 		.4byte	0x6b
 764 00e8 02       		.uleb128 0x2
 765 00e9 91       		.byte	0x91
 766 00ea 77       		.sleb128 -9
 767 00eb 00       		.byte	0
 768 00ec 08       		.uleb128 0x8
 769 00ed 6F030000 		.4byte	.LASF18
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 28


 770 00f1 01       		.byte	0x1
 771 00f2 B4       		.byte	0xb4
 772 00f3 00000000 		.4byte	.LFB1
 773 00f7 20000000 		.4byte	.LFE1-.LFB1
 774 00fb 01       		.uleb128 0x1
 775 00fc 9C       		.byte	0x9c
 776 00fd 09       		.uleb128 0x9
 777 00fe 94000000 		.4byte	.LASF19
 778 0102 01       		.byte	0x1
 779 0103 D7       		.byte	0xd7
 780 0104 00000000 		.4byte	.LFB2
 781 0108 24000000 		.4byte	.LFE2-.LFB2
 782 010c 01       		.uleb128 0x1
 783 010d 9C       		.byte	0x9c
 784 010e 08       		.uleb128 0x8
 785 010f 07030000 		.4byte	.LASF20
 786 0113 01       		.byte	0x1
 787 0114 F7       		.byte	0xf7
 788 0115 00000000 		.4byte	.LFB3
 789 0119 20000000 		.4byte	.LFE3-.LFB3
 790 011d 01       		.uleb128 0x1
 791 011e 9C       		.byte	0x9c
 792 011f 0A       		.uleb128 0xa
 793 0120 18040000 		.4byte	.LASF22
 794 0124 01       		.byte	0x1
 795 0125 1701     		.2byte	0x117
 796 0127 00000000 		.4byte	.LFB4
 797 012b 20000000 		.4byte	.LFE4-.LFB4
 798 012f 01       		.uleb128 0x1
 799 0130 9C       		.byte	0x9c
 800 0131 45010000 		.4byte	0x145
 801 0135 0B       		.uleb128 0xb
 802 0136 D0030000 		.4byte	.LASF27
 803 013a 01       		.byte	0x1
 804 013b 1701     		.2byte	0x117
 805 013d 6B000000 		.4byte	0x6b
 806 0141 02       		.uleb128 0x2
 807 0142 91       		.byte	0x91
 808 0143 77       		.sleb128 -9
 809 0144 00       		.byte	0
 810 0145 0C       		.uleb128 0xc
 811 0146 3F040000 		.4byte	.LASF23
 812 014a 01       		.byte	0x1
 813 014b 2E01     		.2byte	0x12e
 814 014d 00000000 		.4byte	.LFB5
 815 0151 14000000 		.4byte	.LFE5-.LFB5
 816 0155 01       		.uleb128 0x1
 817 0156 9C       		.byte	0x9c
 818 0157 0D       		.uleb128 0xd
 819 0158 B2010000 		.4byte	.LASF24
 820 015c 01       		.byte	0x1
 821 015d 4D01     		.2byte	0x14d
 822 015f 6B000000 		.4byte	0x6b
 823 0163 00000000 		.4byte	.LFB6
 824 0167 18000000 		.4byte	.LFE6-.LFB6
 825 016b 01       		.uleb128 0x1
 826 016c 9C       		.byte	0x9c
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 29


 827 016d 0D       		.uleb128 0xd
 828 016e DD020000 		.4byte	.LASF25
 829 0172 01       		.byte	0x1
 830 0173 6401     		.2byte	0x164
 831 0175 6B000000 		.4byte	0x6b
 832 0179 00000000 		.4byte	.LFB7
 833 017d 18000000 		.4byte	.LFE7-.LFB7
 834 0181 01       		.uleb128 0x1
 835 0182 9C       		.byte	0x9c
 836 0183 0A       		.uleb128 0xa
 837 0184 6D020000 		.4byte	.LASF26
 838 0188 01       		.byte	0x1
 839 0189 7B01     		.2byte	0x17b
 840 018b 00000000 		.4byte	.LFB8
 841 018f 20000000 		.4byte	.LFE8-.LFB8
 842 0193 01       		.uleb128 0x1
 843 0194 9C       		.byte	0x9c
 844 0195 A9010000 		.4byte	0x1a9
 845 0199 0B       		.uleb128 0xb
 846 019a 65020000 		.4byte	.LASF28
 847 019e 01       		.byte	0x1
 848 019f 7B01     		.2byte	0x17b
 849 01a1 6B000000 		.4byte	0x6b
 850 01a5 02       		.uleb128 0x2
 851 01a6 91       		.byte	0x91
 852 01a7 77       		.sleb128 -9
 853 01a8 00       		.byte	0
 854 01a9 0D       		.uleb128 0xd
 855 01aa AF030000 		.4byte	.LASF29
 856 01ae 01       		.byte	0x1
 857 01af 9501     		.2byte	0x195
 858 01b1 77000000 		.4byte	0x77
 859 01b5 00000000 		.4byte	.LFB9
 860 01b9 18000000 		.4byte	.LFE9-.LFB9
 861 01bd 01       		.uleb128 0x1
 862 01be 9C       		.byte	0x9c
 863 01bf 0E       		.uleb128 0xe
 864 01c0 E8030000 		.4byte	.LASF30
 865 01c4 01       		.byte	0x1
 866 01c5 AF01     		.2byte	0x1af
 867 01c7 00000000 		.4byte	.LFB10
 868 01cb 1C000000 		.4byte	.LFE10-.LFB10
 869 01cf 01       		.uleb128 0x1
 870 01d0 9C       		.byte	0x9c
 871 01d1 E5010000 		.4byte	0x1e5
 872 01d5 0B       		.uleb128 0xb
 873 01d6 B0000000 		.4byte	.LASF31
 874 01da 01       		.byte	0x1
 875 01db AF01     		.2byte	0x1af
 876 01dd 77000000 		.4byte	0x77
 877 01e1 02       		.uleb128 0x2
 878 01e2 91       		.byte	0x91
 879 01e3 74       		.sleb128 -12
 880 01e4 00       		.byte	0
 881 01e5 0D       		.uleb128 0xd
 882 01e6 2B020000 		.4byte	.LASF32
 883 01ea 01       		.byte	0x1
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 30


 884 01eb C801     		.2byte	0x1c8
 885 01ed 77000000 		.4byte	0x77
 886 01f1 00000000 		.4byte	.LFB11
 887 01f5 18000000 		.4byte	.LFE11-.LFB11
 888 01f9 01       		.uleb128 0x1
 889 01fa 9C       		.byte	0x9c
 890 01fb 0E       		.uleb128 0xe
 891 01fc B7000000 		.4byte	.LASF33
 892 0200 01       		.byte	0x1
 893 0201 E001     		.2byte	0x1e0
 894 0203 00000000 		.4byte	.LFB12
 895 0207 1C000000 		.4byte	.LFE12-.LFB12
 896 020b 01       		.uleb128 0x1
 897 020c 9C       		.byte	0x9c
 898 020d 21020000 		.4byte	0x221
 899 0211 0B       		.uleb128 0xb
 900 0212 E1010000 		.4byte	.LASF34
 901 0216 01       		.byte	0x1
 902 0217 E001     		.2byte	0x1e0
 903 0219 77000000 		.4byte	0x77
 904 021d 02       		.uleb128 0x2
 905 021e 91       		.byte	0x91
 906 021f 74       		.sleb128 -12
 907 0220 00       		.byte	0
 908 0221 0D       		.uleb128 0xd
 909 0222 4D030000 		.4byte	.LASF35
 910 0226 01       		.byte	0x1
 911 0227 FC01     		.2byte	0x1fc
 912 0229 77000000 		.4byte	0x77
 913 022d 00000000 		.4byte	.LFB13
 914 0231 20000000 		.4byte	.LFE13-.LFB13
 915 0235 01       		.uleb128 0x1
 916 0236 9C       		.byte	0x9c
 917 0237 0F       		.uleb128 0xf
 918 0238 BD020000 		.4byte	.LASF36
 919 023c 01       		.byte	0x1
 920 023d FB02     		.2byte	0x2fb
 921 023f 00000000 		.4byte	.LFB14
 922 0243 1C000000 		.4byte	.LFE14-.LFB14
 923 0247 01       		.uleb128 0x1
 924 0248 9C       		.byte	0x9c
 925 0249 10       		.uleb128 0x10
 926 024a 98020000 		.4byte	.LASF41
 927 024e 01       		.byte	0x1
 928 024f 1A       		.byte	0x1a
 929 0250 6B000000 		.4byte	0x6b
 930 0254 05       		.uleb128 0x5
 931 0255 03       		.byte	0x3
 932 0256 00000000 		.4byte	PingSensorSampleTimer_initVar
 933 025a 00       		.byte	0
 934              		.section	.debug_abbrev,"",%progbits
 935              	.Ldebug_abbrev0:
 936 0000 01       		.uleb128 0x1
 937 0001 11       		.uleb128 0x11
 938 0002 01       		.byte	0x1
 939 0003 25       		.uleb128 0x25
 940 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 31


 941 0005 13       		.uleb128 0x13
 942 0006 0B       		.uleb128 0xb
 943 0007 03       		.uleb128 0x3
 944 0008 0E       		.uleb128 0xe
 945 0009 1B       		.uleb128 0x1b
 946 000a 0E       		.uleb128 0xe
 947 000b 55       		.uleb128 0x55
 948 000c 17       		.uleb128 0x17
 949 000d 11       		.uleb128 0x11
 950 000e 01       		.uleb128 0x1
 951 000f 10       		.uleb128 0x10
 952 0010 17       		.uleb128 0x17
 953 0011 00       		.byte	0
 954 0012 00       		.byte	0
 955 0013 02       		.uleb128 0x2
 956 0014 24       		.uleb128 0x24
 957 0015 00       		.byte	0
 958 0016 0B       		.uleb128 0xb
 959 0017 0B       		.uleb128 0xb
 960 0018 3E       		.uleb128 0x3e
 961 0019 0B       		.uleb128 0xb
 962 001a 03       		.uleb128 0x3
 963 001b 0E       		.uleb128 0xe
 964 001c 00       		.byte	0
 965 001d 00       		.byte	0
 966 001e 03       		.uleb128 0x3
 967 001f 24       		.uleb128 0x24
 968 0020 00       		.byte	0
 969 0021 0B       		.uleb128 0xb
 970 0022 0B       		.uleb128 0xb
 971 0023 3E       		.uleb128 0x3e
 972 0024 0B       		.uleb128 0xb
 973 0025 03       		.uleb128 0x3
 974 0026 08       		.uleb128 0x8
 975 0027 00       		.byte	0
 976 0028 00       		.byte	0
 977 0029 04       		.uleb128 0x4
 978 002a 16       		.uleb128 0x16
 979 002b 00       		.byte	0
 980 002c 03       		.uleb128 0x3
 981 002d 0E       		.uleb128 0xe
 982 002e 3A       		.uleb128 0x3a
 983 002f 0B       		.uleb128 0xb
 984 0030 3B       		.uleb128 0x3b
 985 0031 05       		.uleb128 0x5
 986 0032 49       		.uleb128 0x49
 987 0033 13       		.uleb128 0x13
 988 0034 00       		.byte	0
 989 0035 00       		.byte	0
 990 0036 05       		.uleb128 0x5
 991 0037 35       		.uleb128 0x35
 992 0038 00       		.byte	0
 993 0039 49       		.uleb128 0x49
 994 003a 13       		.uleb128 0x13
 995 003b 00       		.byte	0
 996 003c 00       		.byte	0
 997 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 32


 998 003e 2E       		.uleb128 0x2e
 999 003f 01       		.byte	0x1
 1000 0040 3F       		.uleb128 0x3f
 1001 0041 19       		.uleb128 0x19
 1002 0042 03       		.uleb128 0x3
 1003 0043 0E       		.uleb128 0xe
 1004 0044 3A       		.uleb128 0x3a
 1005 0045 0B       		.uleb128 0xb
 1006 0046 3B       		.uleb128 0x3b
 1007 0047 0B       		.uleb128 0xb
 1008 0048 27       		.uleb128 0x27
 1009 0049 19       		.uleb128 0x19
 1010 004a 11       		.uleb128 0x11
 1011 004b 01       		.uleb128 0x1
 1012 004c 12       		.uleb128 0x12
 1013 004d 06       		.uleb128 0x6
 1014 004e 40       		.uleb128 0x40
 1015 004f 18       		.uleb128 0x18
 1016 0050 9642     		.uleb128 0x2116
 1017 0052 19       		.uleb128 0x19
 1018 0053 01       		.uleb128 0x1
 1019 0054 13       		.uleb128 0x13
 1020 0055 00       		.byte	0
 1021 0056 00       		.byte	0
 1022 0057 07       		.uleb128 0x7
 1023 0058 34       		.uleb128 0x34
 1024 0059 00       		.byte	0
 1025 005a 03       		.uleb128 0x3
 1026 005b 0E       		.uleb128 0xe
 1027 005c 3A       		.uleb128 0x3a
 1028 005d 0B       		.uleb128 0xb
 1029 005e 3B       		.uleb128 0x3b
 1030 005f 0B       		.uleb128 0xb
 1031 0060 49       		.uleb128 0x49
 1032 0061 13       		.uleb128 0x13
 1033 0062 02       		.uleb128 0x2
 1034 0063 18       		.uleb128 0x18
 1035 0064 00       		.byte	0
 1036 0065 00       		.byte	0
 1037 0066 08       		.uleb128 0x8
 1038 0067 2E       		.uleb128 0x2e
 1039 0068 00       		.byte	0
 1040 0069 3F       		.uleb128 0x3f
 1041 006a 19       		.uleb128 0x19
 1042 006b 03       		.uleb128 0x3
 1043 006c 0E       		.uleb128 0xe
 1044 006d 3A       		.uleb128 0x3a
 1045 006e 0B       		.uleb128 0xb
 1046 006f 3B       		.uleb128 0x3b
 1047 0070 0B       		.uleb128 0xb
 1048 0071 27       		.uleb128 0x27
 1049 0072 19       		.uleb128 0x19
 1050 0073 11       		.uleb128 0x11
 1051 0074 01       		.uleb128 0x1
 1052 0075 12       		.uleb128 0x12
 1053 0076 06       		.uleb128 0x6
 1054 0077 40       		.uleb128 0x40
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 33


 1055 0078 18       		.uleb128 0x18
 1056 0079 9742     		.uleb128 0x2117
 1057 007b 19       		.uleb128 0x19
 1058 007c 00       		.byte	0
 1059 007d 00       		.byte	0
 1060 007e 09       		.uleb128 0x9
 1061 007f 2E       		.uleb128 0x2e
 1062 0080 00       		.byte	0
 1063 0081 3F       		.uleb128 0x3f
 1064 0082 19       		.uleb128 0x19
 1065 0083 03       		.uleb128 0x3
 1066 0084 0E       		.uleb128 0xe
 1067 0085 3A       		.uleb128 0x3a
 1068 0086 0B       		.uleb128 0xb
 1069 0087 3B       		.uleb128 0x3b
 1070 0088 0B       		.uleb128 0xb
 1071 0089 27       		.uleb128 0x27
 1072 008a 19       		.uleb128 0x19
 1073 008b 11       		.uleb128 0x11
 1074 008c 01       		.uleb128 0x1
 1075 008d 12       		.uleb128 0x12
 1076 008e 06       		.uleb128 0x6
 1077 008f 40       		.uleb128 0x40
 1078 0090 18       		.uleb128 0x18
 1079 0091 9642     		.uleb128 0x2116
 1080 0093 19       		.uleb128 0x19
 1081 0094 00       		.byte	0
 1082 0095 00       		.byte	0
 1083 0096 0A       		.uleb128 0xa
 1084 0097 2E       		.uleb128 0x2e
 1085 0098 01       		.byte	0x1
 1086 0099 3F       		.uleb128 0x3f
 1087 009a 19       		.uleb128 0x19
 1088 009b 03       		.uleb128 0x3
 1089 009c 0E       		.uleb128 0xe
 1090 009d 3A       		.uleb128 0x3a
 1091 009e 0B       		.uleb128 0xb
 1092 009f 3B       		.uleb128 0x3b
 1093 00a0 05       		.uleb128 0x5
 1094 00a1 27       		.uleb128 0x27
 1095 00a2 19       		.uleb128 0x19
 1096 00a3 11       		.uleb128 0x11
 1097 00a4 01       		.uleb128 0x1
 1098 00a5 12       		.uleb128 0x12
 1099 00a6 06       		.uleb128 0x6
 1100 00a7 40       		.uleb128 0x40
 1101 00a8 18       		.uleb128 0x18
 1102 00a9 9742     		.uleb128 0x2117
 1103 00ab 19       		.uleb128 0x19
 1104 00ac 01       		.uleb128 0x1
 1105 00ad 13       		.uleb128 0x13
 1106 00ae 00       		.byte	0
 1107 00af 00       		.byte	0
 1108 00b0 0B       		.uleb128 0xb
 1109 00b1 05       		.uleb128 0x5
 1110 00b2 00       		.byte	0
 1111 00b3 03       		.uleb128 0x3
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 34


 1112 00b4 0E       		.uleb128 0xe
 1113 00b5 3A       		.uleb128 0x3a
 1114 00b6 0B       		.uleb128 0xb
 1115 00b7 3B       		.uleb128 0x3b
 1116 00b8 05       		.uleb128 0x5
 1117 00b9 49       		.uleb128 0x49
 1118 00ba 13       		.uleb128 0x13
 1119 00bb 02       		.uleb128 0x2
 1120 00bc 18       		.uleb128 0x18
 1121 00bd 00       		.byte	0
 1122 00be 00       		.byte	0
 1123 00bf 0C       		.uleb128 0xc
 1124 00c0 2E       		.uleb128 0x2e
 1125 00c1 00       		.byte	0
 1126 00c2 3F       		.uleb128 0x3f
 1127 00c3 19       		.uleb128 0x19
 1128 00c4 03       		.uleb128 0x3
 1129 00c5 0E       		.uleb128 0xe
 1130 00c6 3A       		.uleb128 0x3a
 1131 00c7 0B       		.uleb128 0xb
 1132 00c8 3B       		.uleb128 0x3b
 1133 00c9 05       		.uleb128 0x5
 1134 00ca 27       		.uleb128 0x27
 1135 00cb 19       		.uleb128 0x19
 1136 00cc 11       		.uleb128 0x11
 1137 00cd 01       		.uleb128 0x1
 1138 00ce 12       		.uleb128 0x12
 1139 00cf 06       		.uleb128 0x6
 1140 00d0 40       		.uleb128 0x40
 1141 00d1 18       		.uleb128 0x18
 1142 00d2 9742     		.uleb128 0x2117
 1143 00d4 19       		.uleb128 0x19
 1144 00d5 00       		.byte	0
 1145 00d6 00       		.byte	0
 1146 00d7 0D       		.uleb128 0xd
 1147 00d8 2E       		.uleb128 0x2e
 1148 00d9 00       		.byte	0
 1149 00da 3F       		.uleb128 0x3f
 1150 00db 19       		.uleb128 0x19
 1151 00dc 03       		.uleb128 0x3
 1152 00dd 0E       		.uleb128 0xe
 1153 00de 3A       		.uleb128 0x3a
 1154 00df 0B       		.uleb128 0xb
 1155 00e0 3B       		.uleb128 0x3b
 1156 00e1 05       		.uleb128 0x5
 1157 00e2 27       		.uleb128 0x27
 1158 00e3 19       		.uleb128 0x19
 1159 00e4 49       		.uleb128 0x49
 1160 00e5 13       		.uleb128 0x13
 1161 00e6 11       		.uleb128 0x11
 1162 00e7 01       		.uleb128 0x1
 1163 00e8 12       		.uleb128 0x12
 1164 00e9 06       		.uleb128 0x6
 1165 00ea 40       		.uleb128 0x40
 1166 00eb 18       		.uleb128 0x18
 1167 00ec 9742     		.uleb128 0x2117
 1168 00ee 19       		.uleb128 0x19
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 35


 1169 00ef 00       		.byte	0
 1170 00f0 00       		.byte	0
 1171 00f1 0E       		.uleb128 0xe
 1172 00f2 2E       		.uleb128 0x2e
 1173 00f3 01       		.byte	0x1
 1174 00f4 3F       		.uleb128 0x3f
 1175 00f5 19       		.uleb128 0x19
 1176 00f6 03       		.uleb128 0x3
 1177 00f7 0E       		.uleb128 0xe
 1178 00f8 3A       		.uleb128 0x3a
 1179 00f9 0B       		.uleb128 0xb
 1180 00fa 3B       		.uleb128 0x3b
 1181 00fb 05       		.uleb128 0x5
 1182 00fc 27       		.uleb128 0x27
 1183 00fd 19       		.uleb128 0x19
 1184 00fe 11       		.uleb128 0x11
 1185 00ff 01       		.uleb128 0x1
 1186 0100 12       		.uleb128 0x12
 1187 0101 06       		.uleb128 0x6
 1188 0102 40       		.uleb128 0x40
 1189 0103 18       		.uleb128 0x18
 1190 0104 9642     		.uleb128 0x2116
 1191 0106 19       		.uleb128 0x19
 1192 0107 01       		.uleb128 0x1
 1193 0108 13       		.uleb128 0x13
 1194 0109 00       		.byte	0
 1195 010a 00       		.byte	0
 1196 010b 0F       		.uleb128 0xf
 1197 010c 2E       		.uleb128 0x2e
 1198 010d 00       		.byte	0
 1199 010e 3F       		.uleb128 0x3f
 1200 010f 19       		.uleb128 0x19
 1201 0110 03       		.uleb128 0x3
 1202 0111 0E       		.uleb128 0xe
 1203 0112 3A       		.uleb128 0x3a
 1204 0113 0B       		.uleb128 0xb
 1205 0114 3B       		.uleb128 0x3b
 1206 0115 05       		.uleb128 0x5
 1207 0116 27       		.uleb128 0x27
 1208 0117 19       		.uleb128 0x19
 1209 0118 11       		.uleb128 0x11
 1210 0119 01       		.uleb128 0x1
 1211 011a 12       		.uleb128 0x12
 1212 011b 06       		.uleb128 0x6
 1213 011c 40       		.uleb128 0x40
 1214 011d 18       		.uleb128 0x18
 1215 011e 9642     		.uleb128 0x2116
 1216 0120 19       		.uleb128 0x19
 1217 0121 00       		.byte	0
 1218 0122 00       		.byte	0
 1219 0123 10       		.uleb128 0x10
 1220 0124 34       		.uleb128 0x34
 1221 0125 00       		.byte	0
 1222 0126 03       		.uleb128 0x3
 1223 0127 0E       		.uleb128 0xe
 1224 0128 3A       		.uleb128 0x3a
 1225 0129 0B       		.uleb128 0xb
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 36


 1226 012a 3B       		.uleb128 0x3b
 1227 012b 0B       		.uleb128 0xb
 1228 012c 49       		.uleb128 0x49
 1229 012d 13       		.uleb128 0x13
 1230 012e 3F       		.uleb128 0x3f
 1231 012f 19       		.uleb128 0x19
 1232 0130 02       		.uleb128 0x2
 1233 0131 18       		.uleb128 0x18
 1234 0132 00       		.byte	0
 1235 0133 00       		.byte	0
 1236 0134 00       		.byte	0
 1237              		.section	.debug_aranges,"",%progbits
 1238 0000 8C000000 		.4byte	0x8c
 1239 0004 0200     		.2byte	0x2
 1240 0006 00000000 		.4byte	.Ldebug_info0
 1241 000a 04       		.byte	0x4
 1242 000b 00       		.byte	0
 1243 000c 0000     		.2byte	0
 1244 000e 0000     		.2byte	0
 1245 0010 00000000 		.4byte	.LFB0
 1246 0014 4C000000 		.4byte	.LFE0-.LFB0
 1247 0018 00000000 		.4byte	.LFB1
 1248 001c 20000000 		.4byte	.LFE1-.LFB1
 1249 0020 00000000 		.4byte	.LFB2
 1250 0024 24000000 		.4byte	.LFE2-.LFB2
 1251 0028 00000000 		.4byte	.LFB3
 1252 002c 20000000 		.4byte	.LFE3-.LFB3
 1253 0030 00000000 		.4byte	.LFB4
 1254 0034 20000000 		.4byte	.LFE4-.LFB4
 1255 0038 00000000 		.4byte	.LFB5
 1256 003c 14000000 		.4byte	.LFE5-.LFB5
 1257 0040 00000000 		.4byte	.LFB6
 1258 0044 18000000 		.4byte	.LFE6-.LFB6
 1259 0048 00000000 		.4byte	.LFB7
 1260 004c 18000000 		.4byte	.LFE7-.LFB7
 1261 0050 00000000 		.4byte	.LFB8
 1262 0054 20000000 		.4byte	.LFE8-.LFB8
 1263 0058 00000000 		.4byte	.LFB9
 1264 005c 18000000 		.4byte	.LFE9-.LFB9
 1265 0060 00000000 		.4byte	.LFB10
 1266 0064 1C000000 		.4byte	.LFE10-.LFB10
 1267 0068 00000000 		.4byte	.LFB11
 1268 006c 18000000 		.4byte	.LFE11-.LFB11
 1269 0070 00000000 		.4byte	.LFB12
 1270 0074 1C000000 		.4byte	.LFE12-.LFB12
 1271 0078 00000000 		.4byte	.LFB13
 1272 007c 20000000 		.4byte	.LFE13-.LFB13
 1273 0080 00000000 		.4byte	.LFB14
 1274 0084 1C000000 		.4byte	.LFE14-.LFB14
 1275 0088 00000000 		.4byte	0
 1276 008c 00000000 		.4byte	0
 1277              		.section	.debug_ranges,"",%progbits
 1278              	.Ldebug_ranges0:
 1279 0000 00000000 		.4byte	.LFB0
 1280 0004 4C000000 		.4byte	.LFE0
 1281 0008 00000000 		.4byte	.LFB1
 1282 000c 20000000 		.4byte	.LFE1
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 37


 1283 0010 00000000 		.4byte	.LFB2
 1284 0014 24000000 		.4byte	.LFE2
 1285 0018 00000000 		.4byte	.LFB3
 1286 001c 20000000 		.4byte	.LFE3
 1287 0020 00000000 		.4byte	.LFB4
 1288 0024 20000000 		.4byte	.LFE4
 1289 0028 00000000 		.4byte	.LFB5
 1290 002c 14000000 		.4byte	.LFE5
 1291 0030 00000000 		.4byte	.LFB6
 1292 0034 18000000 		.4byte	.LFE6
 1293 0038 00000000 		.4byte	.LFB7
 1294 003c 18000000 		.4byte	.LFE7
 1295 0040 00000000 		.4byte	.LFB8
 1296 0044 20000000 		.4byte	.LFE8
 1297 0048 00000000 		.4byte	.LFB9
 1298 004c 18000000 		.4byte	.LFE9
 1299 0050 00000000 		.4byte	.LFB10
 1300 0054 1C000000 		.4byte	.LFE10
 1301 0058 00000000 		.4byte	.LFB11
 1302 005c 18000000 		.4byte	.LFE11
 1303 0060 00000000 		.4byte	.LFB12
 1304 0064 1C000000 		.4byte	.LFE12
 1305 0068 00000000 		.4byte	.LFB13
 1306 006c 20000000 		.4byte	.LFE13
 1307 0070 00000000 		.4byte	.LFB14
 1308 0074 1C000000 		.4byte	.LFE14
 1309 0078 00000000 		.4byte	0
 1310 007c 00000000 		.4byte	0
 1311              		.section	.debug_line,"",%progbits
 1312              	.Ldebug_line0:
 1313 0000 7A010000 		.section	.debug_str,"MS",%progbits,1
 1313      02005200 
 1313      00000201 
 1313      FB0E0D00 
 1313      01010101 
 1314              	.LASF15:
 1315 0000 72656733 		.ascii	"reg32\000"
 1315      3200
 1316              	.LASF37:
 1317 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1317      43313120 
 1317      352E342E 
 1317      31203230 
 1317      31363036 
 1318 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1318      20726576 
 1318      6973696F 
 1318      6E203233 
 1318      37373135 
 1319 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1319      66756E63 
 1319      74696F6E 
 1319      2D736563 
 1319      74696F6E 
 1320              	.LASF19:
 1321 0094 50696E67 		.ascii	"PingSensorSampleTimer_Start\000"
 1321      53656E73 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 38


 1321      6F725361 
 1321      6D706C65 
 1321      54696D65 
 1322              	.LASF31:
 1323 00b0 70657269 		.ascii	"period\000"
 1323      6F6400
 1324              	.LASF33:
 1325 00b7 50696E67 		.ascii	"PingSensorSampleTimer_WriteCounter\000"
 1325      53656E73 
 1325      6F725361 
 1325      6D706C65 
 1325      54696D65 
 1326              	.LASF3:
 1327 00da 73686F72 		.ascii	"short unsigned int\000"
 1327      7420756E 
 1327      7369676E 
 1327      65642069 
 1327      6E7400
 1328              	.LASF40:
 1329 00ed 50696E67 		.ascii	"PingSensorSampleTimer_interruptState\000"
 1329      53656E73 
 1329      6F725361 
 1329      6D706C65 
 1329      54696D65 
 1330              	.LASF21:
 1331 0112 50696E67 		.ascii	"PingSensorSampleTimer_Init\000"
 1331      53656E73 
 1331      6F725361 
 1331      6D706C65 
 1331      54696D65 
 1332              	.LASF39:
 1333 012d 433A5C55 		.ascii	"C:\\Users\\tpbw4321\\AppData\\Roaming\\SPB_Data\\Hy"
 1333      73657273 
 1333      5C747062 
 1333      77343332 
 1333      315C4170 
 1334 015a 64726F70 		.ascii	"droponicsAutomation\\Designs\\Software\\Embedded\\P"
 1334      6F6E6963 
 1334      73417574 
 1334      6F6D6174 
 1334      696F6E5C 
 1335 0189 536F435C 		.ascii	"SoC\\HydroponicAutomationSensorPerf.cydsn\000"
 1335      48796472 
 1335      6F706F6E 
 1335      69634175 
 1335      746F6D61 
 1336              	.LASF24:
 1337 01b2 50696E67 		.ascii	"PingSensorSampleTimer_ReadStatusRegister\000"
 1337      53656E73 
 1337      6F725361 
 1337      6D706C65 
 1337      54696D65 
 1338              	.LASF11:
 1339 01db 666C6F61 		.ascii	"float\000"
 1339      7400
 1340              	.LASF34:
 1341 01e1 636F756E 		.ascii	"counter\000"
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 39


 1341      74657200 
 1342              	.LASF38:
 1343 01e9 47656E65 		.ascii	"Generated_Source\\PSoC5\\PingSensorSampleTimer.c\000"
 1343      72617465 
 1343      645F536F 
 1343      75726365 
 1343      5C50536F 
 1344              	.LASF1:
 1345 0218 756E7369 		.ascii	"unsigned char\000"
 1345      676E6564 
 1345      20636861 
 1345      7200
 1346              	.LASF14:
 1347 0226 72656738 		.ascii	"reg8\000"
 1347      00
 1348              	.LASF32:
 1349 022b 50696E67 		.ascii	"PingSensorSampleTimer_ReadCapture\000"
 1349      53656E73 
 1349      6F725361 
 1349      6D706C65 
 1349      54696D65 
 1350              	.LASF5:
 1351 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 1351      20756E73 
 1351      69676E65 
 1351      6420696E 
 1351      7400
 1352              	.LASF9:
 1353 025f 75696E74 		.ascii	"uint8\000"
 1353      3800
 1354              	.LASF28:
 1355 0265 636F6E74 		.ascii	"control\000"
 1355      726F6C00 
 1356              	.LASF26:
 1357 026d 50696E67 		.ascii	"PingSensorSampleTimer_WriteControlRegister\000"
 1357      53656E73 
 1357      6F725361 
 1357      6D706C65 
 1357      54696D65 
 1358              	.LASF41:
 1359 0298 50696E67 		.ascii	"PingSensorSampleTimer_initVar\000"
 1359      53656E73 
 1359      6F725361 
 1359      6D706C65 
 1359      54696D65 
 1360              	.LASF12:
 1361 02b6 646F7562 		.ascii	"double\000"
 1361      6C6500
 1362              	.LASF36:
 1363 02bd 50696E67 		.ascii	"PingSensorSampleTimer_ClearFIFO\000"
 1363      53656E73 
 1363      6F725361 
 1363      6D706C65 
 1363      54696D65 
 1364              	.LASF25:
 1365 02dd 50696E67 		.ascii	"PingSensorSampleTimer_ReadControlRegister\000"
 1365      53656E73 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 40


 1365      6F725361 
 1365      6D706C65 
 1365      54696D65 
 1366              	.LASF20:
 1367 0307 50696E67 		.ascii	"PingSensorSampleTimer_Stop\000"
 1367      53656E73 
 1367      6F725361 
 1367      6D706C65 
 1367      54696D65 
 1368              	.LASF10:
 1369 0322 75696E74 		.ascii	"uint32\000"
 1369      333200
 1370              	.LASF8:
 1371 0329 756E7369 		.ascii	"unsigned int\000"
 1371      676E6564 
 1371      20696E74 
 1371      00
 1372              	.LASF7:
 1373 0336 6C6F6E67 		.ascii	"long long unsigned int\000"
 1373      206C6F6E 
 1373      6720756E 
 1373      7369676E 
 1373      65642069 
 1374              	.LASF35:
 1375 034d 50696E67 		.ascii	"PingSensorSampleTimer_ReadCounter\000"
 1375      53656E73 
 1375      6F725361 
 1375      6D706C65 
 1375      54696D65 
 1376              	.LASF18:
 1377 036f 50696E67 		.ascii	"PingSensorSampleTimer_Enable\000"
 1377      53656E73 
 1377      6F725361 
 1377      6D706C65 
 1377      54696D65 
 1378              	.LASF16:
 1379 038c 6C6F6E67 		.ascii	"long double\000"
 1379      20646F75 
 1379      626C6500 
 1380              	.LASF17:
 1381 0398 73697A65 		.ascii	"sizetype\000"
 1381      74797065 
 1381      00
 1382              	.LASF6:
 1383 03a1 6C6F6E67 		.ascii	"long long int\000"
 1383      206C6F6E 
 1383      6720696E 
 1383      7400
 1384              	.LASF29:
 1385 03af 50696E67 		.ascii	"PingSensorSampleTimer_ReadPeriod\000"
 1385      53656E73 
 1385      6F725361 
 1385      6D706C65 
 1385      54696D65 
 1386              	.LASF27:
 1387 03d0 696E7465 		.ascii	"interruptMode\000"
 1387      72727570 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccgpxPhT.s 			page 41


 1387      744D6F64 
 1387      6500
 1388              	.LASF2:
 1389 03de 73686F72 		.ascii	"short int\000"
 1389      7420696E 
 1389      7400
 1390              	.LASF30:
 1391 03e8 50696E67 		.ascii	"PingSensorSampleTimer_WritePeriod\000"
 1391      53656E73 
 1391      6F725361 
 1391      6D706C65 
 1391      54696D65 
 1392              	.LASF4:
 1393 040a 6C6F6E67 		.ascii	"long int\000"
 1393      20696E74 
 1393      00
 1394              	.LASF13:
 1395 0413 63686172 		.ascii	"char\000"
 1395      00
 1396              	.LASF22:
 1397 0418 50696E67 		.ascii	"PingSensorSampleTimer_SetInterruptMode\000"
 1397      53656E73 
 1397      6F725361 
 1397      6D706C65 
 1397      54696D65 
 1398              	.LASF23:
 1399 043f 50696E67 		.ascii	"PingSensorSampleTimer_SoftwareCapture\000"
 1399      53656E73 
 1399      6F725361 
 1399      6D706C65 
 1399      54696D65 
 1400              	.LASF0:
 1401 0465 7369676E 		.ascii	"signed char\000"
 1401      65642063 
 1401      68617200 
 1402              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
