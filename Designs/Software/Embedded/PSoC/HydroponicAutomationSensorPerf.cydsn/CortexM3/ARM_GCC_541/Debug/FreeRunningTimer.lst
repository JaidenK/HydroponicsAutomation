ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"FreeRunningTimer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	FreeRunningTimer_initVar
  20              		.bss
  21              		.type	FreeRunningTimer_initVar, %object
  22              		.size	FreeRunningTimer_initVar, 1
  23              	FreeRunningTimer_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.FreeRunningTimer_Init,"ax",%progbits
  26              		.align	2
  27              		.global	FreeRunningTimer_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	FreeRunningTimer_Init, %function
  31              	FreeRunningTimer_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\FreeRunningTimer.c"
   1:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/FreeRunningTimer.c **** * File Name: FreeRunningTimer.c
   3:Generated_Source\PSoC5/FreeRunningTimer.c **** * Version 2.80
   4:Generated_Source\PSoC5/FreeRunningTimer.c **** *
   5:Generated_Source\PSoC5/FreeRunningTimer.c **** * Description:
   6:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/FreeRunningTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/FreeRunningTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/FreeRunningTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/FreeRunningTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/FreeRunningTimer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/FreeRunningTimer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/FreeRunningTimer.c **** *
  15:Generated_Source\PSoC5/FreeRunningTimer.c **** * Note:
  16:Generated_Source\PSoC5/FreeRunningTimer.c **** *
  17:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/FreeRunningTimer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/FreeRunningTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/FreeRunningTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/FreeRunningTimer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  24:Generated_Source\PSoC5/FreeRunningTimer.c **** #include "FreeRunningTimer.h"
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 2


  25:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  26:Generated_Source\PSoC5/FreeRunningTimer.c **** uint8 FreeRunningTimer_initVar = 0u;
  27:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  28:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  29:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_Init
  31:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/FreeRunningTimer.c **** *
  33:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
  34:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/FreeRunningTimer.c **** *
  36:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
  37:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
  38:Generated_Source\PSoC5/FreeRunningTimer.c **** *
  39:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
  40:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
  41:Generated_Source\PSoC5/FreeRunningTimer.c **** *
  42:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_Init(void) 
  44:Generated_Source\PSoC5/FreeRunningTimer.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if(!FreeRunningTimer_UsingFixedFunction)
  46:Generated_Source\PSoC5/FreeRunningTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/FreeRunningTimer.c ****             uint8 FreeRunningTimer_interruptState;
  48:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  50:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (FreeRunningTimer_UsingFixedFunction)
  51:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL &= FreeRunningTimer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  54:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/FreeRunningTimer.c ****             FreeRunningTimer_CONTROL2 &= ((uint8)(~FreeRunningTimer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  59:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/FreeRunningTimer.c ****             FreeRunningTimer_CONTROL3 &= ((uint8)(~FreeRunningTimer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  63:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/FreeRunningTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/FreeRunningTimer.c ****             FreeRunningTimer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  69:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_RunModeUsed == 2)
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 3


  70:Generated_Source\PSoC5/FreeRunningTimer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/FreeRunningTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/FreeRunningTimer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/FreeRunningTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  76:Generated_Source\PSoC5/FreeRunningTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/FreeRunningTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/FreeRunningTimer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/FreeRunningTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  82:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  84:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/FreeRunningTimer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/FreeRunningTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL2 |= FreeRunningTimer_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/FreeRunningTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  90:Generated_Source\PSoC5/FreeRunningTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/FreeRunningTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL3 &= ((uint8)(~FreeRunningTimer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL3 |= FreeRunningTimer_CTRL_RCOD;
  94:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  95:Generated_Source\PSoC5/FreeRunningTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL3 &= ((uint8)(~FreeRunningTimer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL3 |= FreeRunningTimer_CTRL_ENBL;
  98:Generated_Source\PSoC5/FreeRunningTimer.c **** 
  99:Generated_Source\PSoC5/FreeRunningTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/FreeRunningTimer.c ****                 FreeRunningTimer_CONTROL3 |= FreeRunningTimer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/FreeRunningTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 103:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 105:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_RT1 &= ((uint8)(~FreeRunningTimer_RT1_MASK));
 107:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_RT1 |= FreeRunningTimer_SYNC;
 108:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 109:Generated_Source\PSoC5/FreeRunningTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_RT1 &= ((uint8)(~FreeRunningTimer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_RT1 |= FreeRunningTimer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 113:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL2 |= FreeRunningTimer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 117:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/FreeRunningTimer.c ****     FreeRunningTimer_WritePeriod(FreeRunningTimer_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 4FF0FF30 		mov	r0, #-1
  48 000a FFF7FEFF 		bl	FreeRunningTimer_WritePeriod
 119:Generated_Source\PSoC5/FreeRunningTimer.c ****     FreeRunningTimer_WriteCounter(FreeRunningTimer_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000e 4FF0FF30 		mov	r0, #-1
  51 0012 FFF7FEFF 		bl	FreeRunningTimer_WriteCounter
 120:Generated_Source\PSoC5/FreeRunningTimer.c **** 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 4


 121:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (FreeRunningTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CAPTURE_COUNT_CTRL |= FreeRunningTimer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_SetCaptureCount(FreeRunningTimer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 126:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UsingFixedFunction)
 127:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/FreeRunningTimer.c ****             FreeRunningTimer_SetCaptureMode(FreeRunningTimer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 131:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/FreeRunningTimer.c ****             #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/FreeRunningTimer.c ****                 if (0u == (FreeRunningTimer_CONTROL & FreeRunningTimer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/FreeRunningTimer.c ****                 {
 135:Generated_Source\PSoC5/FreeRunningTimer.c ****                     FreeRunningTimer_SetTriggerMode(FreeRunningTimer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/FreeRunningTimer.c ****                 }
 137:Generated_Source\PSoC5/FreeRunningTimer.c ****             #endif /* (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 140:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_interruptState = CyEnterCriticalSection();
  52              		.loc 1 142 0
  53 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  54 001a 0346     		mov	r3, r0
  55 001c FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 144:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_STATUS_AUX_CTRL |= FreeRunningTimer_STATUS_ACTL_INT_EN_MASK;
  56              		.loc 1 145 0
  57 001e 0A4A     		ldr	r2, .L2
  58 0020 094B     		ldr	r3, .L2
  59 0022 1B78     		ldrb	r3, [r3]
  60 0024 DBB2     		uxtb	r3, r3
  61 0026 43F01003 		orr	r3, r3, #16
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 147:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/FreeRunningTimer.c ****         CyExitCriticalSection(FreeRunningTimer_interruptState);
  64              		.loc 1 148 0
  65 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0030 1846     		mov	r0, r3
  67 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 150:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_EnableTriggerMode)
 151:Generated_Source\PSoC5/FreeRunningTimer.c ****             FreeRunningTimer_EnableTrigger();
 152:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/FreeRunningTimer.c **** 		
 154:Generated_Source\PSoC5/FreeRunningTimer.c **** 		
 155:Generated_Source\PSoC5/FreeRunningTimer.c ****         #if (FreeRunningTimer_InterruptOnCaptureCount && !FreeRunningTimer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/FreeRunningTimer.c ****             FreeRunningTimer_SetInterruptCount(FreeRunningTimer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/FreeRunningTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 159:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_ClearFIFO();
  68              		.loc 1 159 0
  69 0036 FFF7FEFF 		bl	FreeRunningTimer_ClearFIFO
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 5


 160:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 162:Generated_Source\PSoC5/FreeRunningTimer.c ****     FreeRunningTimer_SetInterruptMode(FreeRunningTimer_INIT_INTERRUPT_MODE);
  70              		.loc 1 162 0
  71 003a 0020     		movs	r0, #0
  72 003c FFF7FEFF 		bl	FreeRunningTimer_SetInterruptMode
 163:Generated_Source\PSoC5/FreeRunningTimer.c **** }
  73              		.loc 1 163 0
  74 0040 00BF     		nop
  75 0042 0837     		adds	r7, r7, #8
  76              		.cfi_def_cfa_offset 8
  77 0044 BD46     		mov	sp, r7
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 90640040 		.word	1073767568
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	FreeRunningTimer_Init, .-FreeRunningTimer_Init
  88              		.section	.text.FreeRunningTimer_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	FreeRunningTimer_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	FreeRunningTimer_Enable, %function
  94              	FreeRunningTimer_Enable:
  95              	.LFB1:
 164:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 165:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 166:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_Enable
 168:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 170:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 171:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 173:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 174:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 175:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 176:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 177:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 178:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 179:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_Enable(void) 
 181:Generated_Source\PSoC5/FreeRunningTimer.c **** {
  96              		.loc 1 181 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 6


 105              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (FreeRunningTimer_UsingFixedFunction)
 184:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_GLOBAL_ENABLE |= FreeRunningTimer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_GLOBAL_STBY_ENABLE |= FreeRunningTimer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 188:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED || FreeRunningTimer_UsingFixedFunction)
 190:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL |= FreeRunningTimer_CTRL_ENABLE;
 106              		.loc 1 190 0
 107 0004 054A     		ldr	r2, .L5
 108 0006 054B     		ldr	r3, .L5
 109 0008 1B78     		ldrb	r3, [r3]
 110 000a DBB2     		uxtb	r3, r3
 111 000c 63F07F03 		orn	r3, r3, #127
 112 0010 DBB2     		uxtb	r3, r3
 113 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 114              		.loc 1 192 0
 115 0014 00BF     		nop
 116 0016 BD46     		mov	sp, r7
 117              		.cfi_def_cfa_register 13
 118              		@ sp needed
 119 0018 80BC     		pop	{r7}
 120              		.cfi_restore 7
 121              		.cfi_def_cfa_offset 0
 122 001a 7047     		bx	lr
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 001c 70640040 		.word	1073767536
 127              		.cfi_endproc
 128              	.LFE1:
 129              		.size	FreeRunningTimer_Enable, .-FreeRunningTimer_Enable
 130              		.section	.text.FreeRunningTimer_Start,"ax",%progbits
 131              		.align	2
 132              		.global	FreeRunningTimer_Start
 133              		.thumb
 134              		.thumb_func
 135              		.type	FreeRunningTimer_Start, %function
 136              	FreeRunningTimer_Start:
 137              	.LFB2:
 193:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 194:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 195:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_Start
 197:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 199:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 200:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/FreeRunningTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/FreeRunningTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 204:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 205:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 7


 206:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 207:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 208:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 209:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 210:Generated_Source\PSoC5/FreeRunningTimer.c **** * Global variables:
 211:Generated_Source\PSoC5/FreeRunningTimer.c **** *  FreeRunningTimer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/FreeRunningTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 214:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_Start(void) 
 216:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 138              		.loc 1 216 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/FreeRunningTimer.c ****     if(FreeRunningTimer_initVar == 0u)
 148              		.loc 1 217 0
 149 0004 064B     		ldr	r3, .L9
 150 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 151 0008 002B     		cmp	r3, #0
 152 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC5/FreeRunningTimer.c ****     {
 219:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_Init();
 153              		.loc 1 219 0
 154 000c FFF7FEFF 		bl	FreeRunningTimer_Init
 220:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 221:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_initVar = 1u;   /* Clear this bit for Initialization */
 155              		.loc 1 221 0
 156 0010 034B     		ldr	r3, .L9
 157 0012 0122     		movs	r2, #1
 158 0014 1A70     		strb	r2, [r3]
 159              	.L8:
 222:Generated_Source\PSoC5/FreeRunningTimer.c ****     }
 223:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 224:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/FreeRunningTimer.c ****     FreeRunningTimer_Enable();
 160              		.loc 1 225 0
 161 0016 FFF7FEFF 		bl	FreeRunningTimer_Enable
 226:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 162              		.loc 1 226 0
 163 001a 00BF     		nop
 164 001c 80BD     		pop	{r7, pc}
 165              	.L10:
 166 001e 00BF     		.align	2
 167              	.L9:
 168 0020 00000000 		.word	FreeRunningTimer_initVar
 169              		.cfi_endproc
 170              	.LFE2:
 171              		.size	FreeRunningTimer_Start, .-FreeRunningTimer_Start
 172              		.section	.text.FreeRunningTimer_Stop,"ax",%progbits
 173              		.align	2
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 8


 174              		.global	FreeRunningTimer_Stop
 175              		.thumb
 176              		.thumb_func
 177              		.type	FreeRunningTimer_Stop, %function
 178              	FreeRunningTimer_Stop:
 179              	.LFB3:
 227:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 228:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 229:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_Stop
 231:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 233:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 234:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/FreeRunningTimer.c **** *  interrupts.
 236:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 237:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 238:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 239:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 240:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 241:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 242:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 243:Generated_Source\PSoC5/FreeRunningTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/FreeRunningTimer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 246:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_Stop(void) 
 248:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 180              		.loc 1 248 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 80B4     		push	{r7}
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if(!FreeRunningTimer_UDB_CONTROL_REG_REMOVED || FreeRunningTimer_UsingFixedFunction)
 251:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL &= ((uint8)(~FreeRunningTimer_CTRL_ENABLE));
 190              		.loc 1 251 0
 191 0004 054A     		ldr	r2, .L12
 192 0006 054B     		ldr	r3, .L12
 193 0008 1B78     		ldrb	r3, [r3]
 194 000a DBB2     		uxtb	r3, r3
 195 000c 03F07F03 		and	r3, r3, #127
 196 0010 DBB2     		uxtb	r3, r3
 197 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 254:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (FreeRunningTimer_UsingFixedFunction)
 256:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_GLOBAL_ENABLE &= ((uint8)(~FreeRunningTimer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~FreeRunningTimer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/FreeRunningTimer.c **** }
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 9


 198              		.loc 1 259 0
 199 0014 00BF     		nop
 200 0016 BD46     		mov	sp, r7
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 0018 80BC     		pop	{r7}
 204              		.cfi_restore 7
 205              		.cfi_def_cfa_offset 0
 206 001a 7047     		bx	lr
 207              	.L13:
 208              		.align	2
 209              	.L12:
 210 001c 70640040 		.word	1073767536
 211              		.cfi_endproc
 212              	.LFE3:
 213              		.size	FreeRunningTimer_Stop, .-FreeRunningTimer_Stop
 214              		.section	.text.FreeRunningTimer_SetInterruptMode,"ax",%progbits
 215              		.align	2
 216              		.global	FreeRunningTimer_SetInterruptMode
 217              		.thumb
 218              		.thumb_func
 219              		.type	FreeRunningTimer_SetInterruptMode, %function
 220              	FreeRunningTimer_SetInterruptMode:
 221              	.LFB4:
 260:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 261:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 262:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_SetInterruptMode
 264:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 266:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 267:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/FreeRunningTimer.c **** *  be selected.
 270:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 271:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 272:Generated_Source\PSoC5/FreeRunningTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/FreeRunningTimer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 275:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 276:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 277:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 278:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 222              		.loc 1 280 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 10


 234 0006 0346     		mov	r3, r0
 235 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/FreeRunningTimer.c ****     FreeRunningTimer_STATUS_MASK = interruptMode;
 236              		.loc 1 281 0
 237 000a 044A     		ldr	r2, .L15
 238 000c FB79     		ldrb	r3, [r7, #7]
 239 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 240              		.loc 1 282 0
 241 0010 00BF     		nop
 242 0012 0C37     		adds	r7, r7, #12
 243              		.cfi_def_cfa_offset 4
 244 0014 BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 0016 80BC     		pop	{r7}
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0018 7047     		bx	lr
 251              	.L16:
 252 001a 00BF     		.align	2
 253              	.L15:
 254 001c 80640040 		.word	1073767552
 255              		.cfi_endproc
 256              	.LFE4:
 257              		.size	FreeRunningTimer_SetInterruptMode, .-FreeRunningTimer_SetInterruptMode
 258              		.section	.text.FreeRunningTimer_SoftwareCapture,"ax",%progbits
 259              		.align	2
 260              		.global	FreeRunningTimer_SoftwareCapture
 261              		.thumb
 262              		.thumb_func
 263              		.type	FreeRunningTimer_SoftwareCapture, %function
 264              	FreeRunningTimer_SoftwareCapture:
 265              	.LFB5:
 283:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 284:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 285:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_SoftwareCapture
 287:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 289:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 290:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 292:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 293:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 294:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 295:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 296:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 297:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 298:Generated_Source\PSoC5/FreeRunningTimer.c **** * Side Effects:
 299:Generated_Source\PSoC5/FreeRunningTimer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 301:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 266              		.loc 1 303 0
 267              		.cfi_startproc
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 11


 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 80B4     		push	{r7}
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if(FreeRunningTimer_UsingFixedFunction)
 306:Generated_Source\PSoC5/FreeRunningTimer.c ****         (void)CY_GET_REG16(FreeRunningTimer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 308:Generated_Source\PSoC5/FreeRunningTimer.c ****         (void)CY_GET_REG8(FreeRunningTimer_COUNTER_LSB_PTR_8BIT);
 276              		.loc 1 308 0
 277 0004 024B     		ldr	r3, .L18
 278 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif/* (FreeRunningTimer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 279              		.loc 1 311 0
 280 0008 00BF     		nop
 281 000a BD46     		mov	sp, r7
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 000c 80BC     		pop	{r7}
 285              		.cfi_restore 7
 286              		.cfi_def_cfa_offset 0
 287 000e 7047     		bx	lr
 288              	.L19:
 289              		.align	2
 290              	.L18:
 291 0010 00640040 		.word	1073767424
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	FreeRunningTimer_SoftwareCapture, .-FreeRunningTimer_SoftwareCapture
 295              		.section	.text.FreeRunningTimer_ReadStatusRegister,"ax",%progbits
 296              		.align	2
 297              		.global	FreeRunningTimer_ReadStatusRegister
 298              		.thumb
 299              		.thumb_func
 300              		.type	FreeRunningTimer_ReadStatusRegister, %function
 301              	FreeRunningTimer_ReadStatusRegister:
 302              	.LFB6:
 312:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 313:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 314:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ReadStatusRegister
 316:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 318:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 319:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/FreeRunningTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/FreeRunningTimer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 323:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 324:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 325:Generated_Source\PSoC5/FreeRunningTimer.c **** *
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 12


 326:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 327:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 329:Generated_Source\PSoC5/FreeRunningTimer.c **** * Side Effects:
 330:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 332:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/FreeRunningTimer.c **** uint8   FreeRunningTimer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 303              		.loc 1 334 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/FreeRunningTimer.c ****     return (FreeRunningTimer_STATUS);
 313              		.loc 1 335 0
 314 0004 034B     		ldr	r3, .L22
 315 0006 1B78     		ldrb	r3, [r3]
 316 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 317              		.loc 1 336 0
 318 000a 1846     		mov	r0, r3
 319 000c BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 000e 80BC     		pop	{r7}
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 0010 7047     		bx	lr
 326              	.L23:
 327 0012 00BF     		.align	2
 328              	.L22:
 329 0014 60640040 		.word	1073767520
 330              		.cfi_endproc
 331              	.LFE6:
 332              		.size	FreeRunningTimer_ReadStatusRegister, .-FreeRunningTimer_ReadStatusRegister
 333              		.section	.text.FreeRunningTimer_ReadControlRegister,"ax",%progbits
 334              		.align	2
 335              		.global	FreeRunningTimer_ReadControlRegister
 336              		.thumb
 337              		.thumb_func
 338              		.type	FreeRunningTimer_ReadControlRegister, %function
 339              	FreeRunningTimer_ReadControlRegister:
 340              	.LFB7:
 337:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 338:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 339:Generated_Source\PSoC5/FreeRunningTimer.c **** #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 341:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 342:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ReadControlRegister
 344:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 13


 345:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 346:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 347:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 349:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 350:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 351:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 352:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 353:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 355:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/FreeRunningTimer.c **** uint8 FreeRunningTimer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 341              		.loc 1 357 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/FreeRunningTimer.c ****         return ((uint8)FreeRunningTimer_CONTROL);
 351              		.loc 1 359 0
 352 0004 034B     		ldr	r3, .L26
 353 0006 1B78     		ldrb	r3, [r3]
 354 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 361:Generated_Source\PSoC5/FreeRunningTimer.c ****         return (0);
 362:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 355              		.loc 1 363 0
 356 000a 1846     		mov	r0, r3
 357 000c BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 000e 80BC     		pop	{r7}
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0010 7047     		bx	lr
 364              	.L27:
 365 0012 00BF     		.align	2
 366              	.L26:
 367 0014 70640040 		.word	1073767536
 368              		.cfi_endproc
 369              	.LFE7:
 370              		.size	FreeRunningTimer_ReadControlRegister, .-FreeRunningTimer_ReadControlRegister
 371              		.section	.text.FreeRunningTimer_WriteControlRegister,"ax",%progbits
 372              		.align	2
 373              		.global	FreeRunningTimer_WriteControlRegister
 374              		.thumb
 375              		.thumb_func
 376              		.type	FreeRunningTimer_WriteControlRegister, %function
 377              	FreeRunningTimer_WriteControlRegister:
 378              	.LFB8:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 14


 364:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 365:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 366:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_WriteControlRegister
 368:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 370:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 371:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 373:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 374:Generated_Source\PSoC5/FreeRunningTimer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 376:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 377:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 378:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 379              		.loc 1 380 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 83B0     		sub	sp, sp, #12
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 391 0006 0346     		mov	r3, r0
 392 0008 FB71     		strb	r3, [r7, #7]
 381:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL = control;
 393              		.loc 1 382 0
 394 000a 044A     		ldr	r2, .L29
 395 000c FB79     		ldrb	r3, [r7, #7]
 396 000e 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 384:Generated_Source\PSoC5/FreeRunningTimer.c ****         control = 0u;
 385:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 397              		.loc 1 386 0
 398 0010 00BF     		nop
 399 0012 0C37     		adds	r7, r7, #12
 400              		.cfi_def_cfa_offset 4
 401 0014 BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 0016 80BC     		pop	{r7}
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0018 7047     		bx	lr
 408              	.L30:
 409 001a 00BF     		.align	2
 410              	.L29:
 411 001c 70640040 		.word	1073767536
 412              		.cfi_endproc
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 15


 413              	.LFE8:
 414              		.size	FreeRunningTimer_WriteControlRegister, .-FreeRunningTimer_WriteControlRegister
 415              		.section	.text.FreeRunningTimer_ReadPeriod,"ax",%progbits
 416              		.align	2
 417              		.global	FreeRunningTimer_ReadPeriod
 418              		.thumb
 419              		.thumb_func
 420              		.type	FreeRunningTimer_ReadPeriod, %function
 421              	FreeRunningTimer_ReadPeriod:
 422              	.LFB9:
 387:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 388:Generated_Source\PSoC5/FreeRunningTimer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 390:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 391:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ReadPeriod
 393:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 395:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 396:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 398:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 399:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 400:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 401:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 402:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 404:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/FreeRunningTimer.c **** uint32 FreeRunningTimer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 423              		.loc 1 406 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428 0000 80B4     		push	{r7}
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 0002 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/FreeRunningTimer.c ****    #if(FreeRunningTimer_UsingFixedFunction)
 408:Generated_Source\PSoC5/FreeRunningTimer.c ****        return ((uint32)CY_GET_REG16(FreeRunningTimer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/FreeRunningTimer.c ****    #else
 410:Generated_Source\PSoC5/FreeRunningTimer.c ****        return (CY_GET_REG32(FreeRunningTimer_PERIOD_LSB_PTR));
 433              		.loc 1 410 0
 434 0004 024B     		ldr	r3, .L33
 435 0006 1B68     		ldr	r3, [r3]
 411:Generated_Source\PSoC5/FreeRunningTimer.c ****    #endif /* (FreeRunningTimer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 436              		.loc 1 412 0
 437 0008 1846     		mov	r0, r3
 438 000a BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 000c 80BC     		pop	{r7}
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 16


 444 000e 7047     		bx	lr
 445              	.L34:
 446              		.align	2
 447              	.L33:
 448 0010 20640040 		.word	1073767456
 449              		.cfi_endproc
 450              	.LFE9:
 451              		.size	FreeRunningTimer_ReadPeriod, .-FreeRunningTimer_ReadPeriod
 452              		.section	.text.FreeRunningTimer_WritePeriod,"ax",%progbits
 453              		.align	2
 454              		.global	FreeRunningTimer_WritePeriod
 455              		.thumb
 456              		.thumb_func
 457              		.type	FreeRunningTimer_WritePeriod, %function
 458              	FreeRunningTimer_WritePeriod:
 459              	.LFB10:
 413:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 414:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 415:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_WritePeriod
 417:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 419:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 420:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/FreeRunningTimer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 423:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 424:Generated_Source\PSoC5/FreeRunningTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/FreeRunningTimer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 427:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 428:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 429:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 430:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 460              		.loc 1 432 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 8
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465 0000 80B4     		push	{r7}
 466              		.cfi_def_cfa_offset 4
 467              		.cfi_offset 7, -4
 468 0002 83B0     		sub	sp, sp, #12
 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 472 0006 7860     		str	r0, [r7, #4]
 433:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if(FreeRunningTimer_UsingFixedFunction)
 434:Generated_Source\PSoC5/FreeRunningTimer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/FreeRunningTimer.c ****         CY_SET_REG16(FreeRunningTimer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 437:Generated_Source\PSoC5/FreeRunningTimer.c ****         CY_SET_REG32(FreeRunningTimer_PERIOD_LSB_PTR, period);
 473              		.loc 1 437 0
 474 0008 034A     		ldr	r2, .L36
 475 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 17


 476 000c 1360     		str	r3, [r2]
 438:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 477              		.loc 1 439 0
 478 000e 00BF     		nop
 479 0010 0C37     		adds	r7, r7, #12
 480              		.cfi_def_cfa_offset 4
 481 0012 BD46     		mov	sp, r7
 482              		.cfi_def_cfa_register 13
 483              		@ sp needed
 484 0014 80BC     		pop	{r7}
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 0016 7047     		bx	lr
 488              	.L37:
 489              		.align	2
 490              	.L36:
 491 0018 20640040 		.word	1073767456
 492              		.cfi_endproc
 493              	.LFE10:
 494              		.size	FreeRunningTimer_WritePeriod, .-FreeRunningTimer_WritePeriod
 495              		.section	.text.FreeRunningTimer_ReadCapture,"ax",%progbits
 496              		.align	2
 497              		.global	FreeRunningTimer_ReadCapture
 498              		.thumb
 499              		.thumb_func
 500              		.type	FreeRunningTimer_ReadCapture, %function
 501              	FreeRunningTimer_ReadCapture:
 502              	.LFB11:
 440:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 441:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 442:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ReadCapture
 444:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 446:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 447:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 449:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 450:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 451:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 452:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 453:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 455:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/FreeRunningTimer.c **** uint32 FreeRunningTimer_ReadCapture(void) 
 457:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 503              		.loc 1 457 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 18


 458:Generated_Source\PSoC5/FreeRunningTimer.c ****    #if(FreeRunningTimer_UsingFixedFunction)
 459:Generated_Source\PSoC5/FreeRunningTimer.c ****        return ((uint32)CY_GET_REG16(FreeRunningTimer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/FreeRunningTimer.c ****    #else
 461:Generated_Source\PSoC5/FreeRunningTimer.c ****        return (CY_GET_REG32(FreeRunningTimer_CAPTURE_LSB_PTR));
 513              		.loc 1 461 0
 514 0004 024B     		ldr	r3, .L40
 515 0006 1B68     		ldr	r3, [r3]
 462:Generated_Source\PSoC5/FreeRunningTimer.c ****    #endif /* (FreeRunningTimer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 516              		.loc 1 463 0
 517 0008 1846     		mov	r0, r3
 518 000a BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 000c 80BC     		pop	{r7}
 522              		.cfi_restore 7
 523              		.cfi_def_cfa_offset 0
 524 000e 7047     		bx	lr
 525              	.L41:
 526              		.align	2
 527              	.L40:
 528 0010 40640040 		.word	1073767488
 529              		.cfi_endproc
 530              	.LFE11:
 531              		.size	FreeRunningTimer_ReadCapture, .-FreeRunningTimer_ReadCapture
 532              		.section	.text.FreeRunningTimer_WriteCounter,"ax",%progbits
 533              		.align	2
 534              		.global	FreeRunningTimer_WriteCounter
 535              		.thumb
 536              		.thumb_func
 537              		.type	FreeRunningTimer_WriteCounter, %function
 538              	FreeRunningTimer_WriteCounter:
 539              	.LFB12:
 464:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 465:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 466:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_WriteCounter
 468:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 470:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 471:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 473:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 474:Generated_Source\PSoC5/FreeRunningTimer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 476:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 477:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 478:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 479:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 540              		.loc 1 481 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 19


 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 83B0     		sub	sp, sp, #12
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 7860     		str	r0, [r7, #4]
 482:Generated_Source\PSoC5/FreeRunningTimer.c ****    #if(FreeRunningTimer_UsingFixedFunction)
 483:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/FreeRunningTimer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/FreeRunningTimer.c ****          */
 486:Generated_Source\PSoC5/FreeRunningTimer.c ****         CY_SET_REG16(FreeRunningTimer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/FreeRunningTimer.c ****         
 488:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 489:Generated_Source\PSoC5/FreeRunningTimer.c ****         CY_SET_REG32(FreeRunningTimer_COUNTER_LSB_PTR, counter);
 553              		.loc 1 489 0
 554 0008 034A     		ldr	r2, .L43
 555 000a 7B68     		ldr	r3, [r7, #4]
 556 000c 1360     		str	r3, [r2]
 490:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 557              		.loc 1 491 0
 558 000e 00BF     		nop
 559 0010 0C37     		adds	r7, r7, #12
 560              		.cfi_def_cfa_offset 4
 561 0012 BD46     		mov	sp, r7
 562              		.cfi_def_cfa_register 13
 563              		@ sp needed
 564 0014 80BC     		pop	{r7}
 565              		.cfi_restore 7
 566              		.cfi_def_cfa_offset 0
 567 0016 7047     		bx	lr
 568              	.L44:
 569              		.align	2
 570              	.L43:
 571 0018 00640040 		.word	1073767424
 572              		.cfi_endproc
 573              	.LFE12:
 574              		.size	FreeRunningTimer_WriteCounter, .-FreeRunningTimer_WriteCounter
 575              		.section	.text.FreeRunningTimer_ReadCounter,"ax",%progbits
 576              		.align	2
 577              		.global	FreeRunningTimer_ReadCounter
 578              		.thumb
 579              		.thumb_func
 580              		.type	FreeRunningTimer_ReadCounter, %function
 581              	FreeRunningTimer_ReadCounter:
 582              	.LFB13:
 492:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 493:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 494:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ReadCounter
 496:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 498:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 499:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 501:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 20


 502:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 503:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 504:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 505:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 507:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/FreeRunningTimer.c **** uint32 FreeRunningTimer_ReadCounter(void) 
 509:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 583              		.loc 1 509 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588 0000 80B4     		push	{r7}
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 7, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if(FreeRunningTimer_UsingFixedFunction)
 514:Generated_Source\PSoC5/FreeRunningTimer.c ****         (void)CY_GET_REG16(FreeRunningTimer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 516:Generated_Source\PSoC5/FreeRunningTimer.c ****         (void)CY_GET_REG8(FreeRunningTimer_COUNTER_LSB_PTR_8BIT);
 593              		.loc 1 516 0
 594 0004 034B     		ldr	r3, .L47
 595 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif/* (FreeRunningTimer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 519:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if(FreeRunningTimer_UsingFixedFunction)
 521:Generated_Source\PSoC5/FreeRunningTimer.c ****         return ((uint32)CY_GET_REG16(FreeRunningTimer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/FreeRunningTimer.c ****     #else
 523:Generated_Source\PSoC5/FreeRunningTimer.c ****         return (CY_GET_REG32(FreeRunningTimer_CAPTURE_LSB_PTR));
 596              		.loc 1 523 0
 597 0008 034B     		ldr	r3, .L47+4
 598 000a 1B68     		ldr	r3, [r3]
 524:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* (FreeRunningTimer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 599              		.loc 1 525 0
 600 000c 1846     		mov	r0, r3
 601 000e BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 0010 80BC     		pop	{r7}
 605              		.cfi_restore 7
 606              		.cfi_def_cfa_offset 0
 607 0012 7047     		bx	lr
 608              	.L48:
 609              		.align	2
 610              	.L47:
 611 0014 00640040 		.word	1073767424
 612 0018 40640040 		.word	1073767488
 613              		.cfi_endproc
 614              	.LFE13:
 615              		.size	FreeRunningTimer_ReadCounter, .-FreeRunningTimer_ReadCounter
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 21


 616              		.section	.text.FreeRunningTimer_ClearFIFO,"ax",%progbits
 617              		.align	2
 618              		.global	FreeRunningTimer_ClearFIFO
 619              		.thumb
 620              		.thumb_func
 621              		.type	FreeRunningTimer_ClearFIFO, %function
 622              	FreeRunningTimer_ClearFIFO:
 623              	.LFB14:
 526:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 527:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 528:Generated_Source\PSoC5/FreeRunningTimer.c **** #if(!FreeRunningTimer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 530:Generated_Source\PSoC5/FreeRunningTimer.c ****     
 531:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/FreeRunningTimer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/FreeRunningTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/FreeRunningTimer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 536:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 537:Generated_Source\PSoC5/FreeRunningTimer.c **** #if (FreeRunningTimer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 539:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 540:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_SetCaptureMode
 542:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 544:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 545:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 547:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 548:Generated_Source\PSoC5/FreeRunningTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/FreeRunningTimer.c **** *  #define FreeRunningTimer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/FreeRunningTimer.c **** #define FreeRunningTimer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/FreeRunningTimer.c **** #define FreeRunningTimer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/FreeRunningTimer.c **** #define FreeRunningTimer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/FreeRunningTimer.c **** #define FreeRunningTimer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/FreeRunningTimer.c ****  identifiers
 556:Generated_Source\PSoC5/FreeRunningTimer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/FreeRunningTimer.c **** *  FreeRunningTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/FreeRunningTimer.c **** *  FreeRunningTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/FreeRunningTimer.c **** *  FreeRunningTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/FreeRunningTimer.c **** *  FreeRunningTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 562:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 563:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 564:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 565:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 568:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/FreeRunningTimer.c ****     captureMode = ((uint8)((uint8)captureMode << FreeRunningTimer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/FreeRunningTimer.c ****     captureMode &= (FreeRunningTimer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 572:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL &= ((uint8)(~FreeRunningTimer_CTRL_CAP_MODE_MASK));
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 22


 575:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 576:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 580:Generated_Source\PSoC5/FreeRunningTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 582:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 583:Generated_Source\PSoC5/FreeRunningTimer.c **** #if (FreeRunningTimer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 585:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 586:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_SetTriggerMode
 588:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 590:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 591:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 593:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 594:Generated_Source\PSoC5/FreeRunningTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/FreeRunningTimer.c ****     #define FreeRunningTimer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/FreeRunningTimer.c ****     #define FreeRunningTimer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/FreeRunningTimer.c ****     #define FreeRunningTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/FreeRunningTimer.c ****     #define FreeRunningTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/FreeRunningTimer.c ****     #define FreeRunningTimer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 601:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 602:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 603:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 604:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 607:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/FreeRunningTimer.c ****     triggerMode &= FreeRunningTimer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 610:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is r
 611:Generated_Source\PSoC5/FreeRunningTimer.c ****     
 612:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL &= ((uint8)(~FreeRunningTimer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 615:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL |= (triggerMode | FreeRunningTimer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 619:Generated_Source\PSoC5/FreeRunningTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 621:Generated_Source\PSoC5/FreeRunningTimer.c **** #if (FreeRunningTimer_EnableTriggerMode)
 622:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 623:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 624:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_EnableTrigger
 626:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 628:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 629:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 631:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 23


 632:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 633:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 634:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 635:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 636:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 637:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 640:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is r
 641:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL |= FreeRunningTimer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 644:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 645:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 646:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_DisableTrigger
 648:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 650:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 651:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 653:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 654:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 655:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 656:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 657:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 658:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 659:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 662:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is 
 663:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL &= ((uint8)(~FreeRunningTimer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 666:Generated_Source\PSoC5/FreeRunningTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 668:Generated_Source\PSoC5/FreeRunningTimer.c **** #if(FreeRunningTimer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 670:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 671:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_SetInterruptCount
 673:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 675:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 676:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 678:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 679:Generated_Source\PSoC5/FreeRunningTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/FreeRunningTimer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/FreeRunningTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/FreeRunningTimer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 684:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 685:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 686:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 687:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_SetInterruptCount(uint8 interruptCount) 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 24


 689:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 690:Generated_Source\PSoC5/FreeRunningTimer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/FreeRunningTimer.c ****     interruptCount &= FreeRunningTimer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 693:Generated_Source\PSoC5/FreeRunningTimer.c ****     #if (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL &= ((uint8)(~FreeRunningTimer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/FreeRunningTimer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/FreeRunningTimer.c ****         FreeRunningTimer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/FreeRunningTimer.c ****     #endif /* (!FreeRunningTimer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 700:Generated_Source\PSoC5/FreeRunningTimer.c **** #endif /* FreeRunningTimer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 702:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 703:Generated_Source\PSoC5/FreeRunningTimer.c **** #if (FreeRunningTimer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 705:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 706:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_SetCaptureCount
 708:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 710:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 711:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 713:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 714:Generated_Source\PSoC5/FreeRunningTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/FreeRunningTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/FreeRunningTimer.c **** *                captures.
 717:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 718:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 719:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 720:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 721:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 724:Generated_Source\PSoC5/FreeRunningTimer.c ****     FreeRunningTimer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 726:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 727:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 728:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ReadCaptureCount
 730:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 732:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 733:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 735:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 736:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 737:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 738:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 739:Generated_Source\PSoC5/FreeRunningTimer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 741:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/FreeRunningTimer.c **** uint8 FreeRunningTimer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 744:Generated_Source\PSoC5/FreeRunningTimer.c ****     return ((uint8)FreeRunningTimer_CAP_COUNT);
 745:Generated_Source\PSoC5/FreeRunningTimer.c **** }
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 25


 746:Generated_Source\PSoC5/FreeRunningTimer.c **** #endif /* FreeRunningTimer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 748:Generated_Source\PSoC5/FreeRunningTimer.c **** 
 749:Generated_Source\PSoC5/FreeRunningTimer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/FreeRunningTimer.c **** * Function Name: FreeRunningTimer_ClearFIFO
 751:Generated_Source\PSoC5/FreeRunningTimer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 753:Generated_Source\PSoC5/FreeRunningTimer.c **** * Summary:
 754:Generated_Source\PSoC5/FreeRunningTimer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 756:Generated_Source\PSoC5/FreeRunningTimer.c **** * Parameters:
 757:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 758:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 759:Generated_Source\PSoC5/FreeRunningTimer.c **** * Return:
 760:Generated_Source\PSoC5/FreeRunningTimer.c **** *  void
 761:Generated_Source\PSoC5/FreeRunningTimer.c **** *
 762:Generated_Source\PSoC5/FreeRunningTimer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/FreeRunningTimer.c **** void FreeRunningTimer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/FreeRunningTimer.c **** {
 624              		.loc 1 764 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC5/FreeRunningTimer.c ****     while(0u != (FreeRunningTimer_ReadStatusRegister() & FreeRunningTimer_STATUS_FIFONEMP))
 634              		.loc 1 765 0
 635 0004 01E0     		b	.L50
 636              	.L51:
 766:Generated_Source\PSoC5/FreeRunningTimer.c ****     {
 767:Generated_Source\PSoC5/FreeRunningTimer.c ****         (void)FreeRunningTimer_ReadCapture();
 637              		.loc 1 767 0
 638 0006 FFF7FEFF 		bl	FreeRunningTimer_ReadCapture
 639              	.L50:
 765:Generated_Source\PSoC5/FreeRunningTimer.c ****     while(0u != (FreeRunningTimer_ReadStatusRegister() & FreeRunningTimer_STATUS_FIFONEMP))
 640              		.loc 1 765 0
 641 000a FFF7FEFF 		bl	FreeRunningTimer_ReadStatusRegister
 642 000e 0346     		mov	r3, r0
 643 0010 03F00803 		and	r3, r3, #8
 644 0014 002B     		cmp	r3, #0
 645 0016 F6D1     		bne	.L51
 768:Generated_Source\PSoC5/FreeRunningTimer.c ****     }
 769:Generated_Source\PSoC5/FreeRunningTimer.c **** }
 646              		.loc 1 769 0
 647 0018 00BF     		nop
 648 001a 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE14:
 651              		.size	FreeRunningTimer_ClearFIFO, .-FreeRunningTimer_ClearFIFO
 652              		.text
 653              	.Letext0:
 654              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 655              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 26


 656              	.Ldebug_info0:
 657 0000 57020000 		.4byte	0x257
 658 0004 0400     		.2byte	0x4
 659 0006 00000000 		.4byte	.Ldebug_abbrev0
 660 000a 04       		.byte	0x4
 661 000b 01       		.uleb128 0x1
 662 000c 19000000 		.4byte	.LASF37
 663 0010 0C       		.byte	0xc
 664 0011 A7000000 		.4byte	.LASF38
 665 0015 62010000 		.4byte	.LASF39
 666 0019 00000000 		.4byte	.Ldebug_ranges0+0
 667 001d 00000000 		.4byte	0
 668 0021 00000000 		.4byte	.Ldebug_line0
 669 0025 02       		.uleb128 0x2
 670 0026 01       		.byte	0x1
 671 0027 06       		.byte	0x6
 672 0028 C8030000 		.4byte	.LASF0
 673 002c 02       		.uleb128 0x2
 674 002d 01       		.byte	0x1
 675 002e 08       		.byte	0x8
 676 002f 0B020000 		.4byte	.LASF1
 677 0033 02       		.uleb128 0x2
 678 0034 02       		.byte	0x2
 679 0035 05       		.byte	0x5
 680 0036 86030000 		.4byte	.LASF2
 681 003a 02       		.uleb128 0x2
 682 003b 02       		.byte	0x2
 683 003c 07       		.byte	0x7
 684 003d 0B010000 		.4byte	.LASF3
 685 0041 02       		.uleb128 0x2
 686 0042 04       		.byte	0x4
 687 0043 05       		.byte	0x5
 688 0044 AD030000 		.4byte	.LASF4
 689 0048 02       		.uleb128 0x2
 690 0049 04       		.byte	0x4
 691 004a 07       		.byte	0x7
 692 004b 40020000 		.4byte	.LASF5
 693 004f 02       		.uleb128 0x2
 694 0050 08       		.byte	0x8
 695 0051 05       		.byte	0x5
 696 0052 3D030000 		.4byte	.LASF6
 697 0056 02       		.uleb128 0x2
 698 0057 08       		.byte	0x8
 699 0058 07       		.byte	0x7
 700 0059 C6020000 		.4byte	.LASF7
 701 005d 03       		.uleb128 0x3
 702 005e 04       		.byte	0x4
 703 005f 05       		.byte	0x5
 704 0060 696E7400 		.ascii	"int\000"
 705 0064 02       		.uleb128 0x2
 706 0065 04       		.byte	0x4
 707 0066 07       		.byte	0x7
 708 0067 79030000 		.4byte	.LASF8
 709 006b 04       		.uleb128 0x4
 710 006c 52020000 		.4byte	.LASF9
 711 0070 02       		.byte	0x2
 712 0071 9201     		.2byte	0x192
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 27


 713 0073 2C000000 		.4byte	0x2c
 714 0077 04       		.uleb128 0x4
 715 0078 9A020000 		.4byte	.LASF10
 716 007c 02       		.byte	0x2
 717 007d 9401     		.2byte	0x194
 718 007f 48000000 		.4byte	0x48
 719 0083 02       		.uleb128 0x2
 720 0084 04       		.byte	0x4
 721 0085 04       		.byte	0x4
 722 0086 E7010000 		.4byte	.LASF11
 723 008a 02       		.uleb128 0x2
 724 008b 08       		.byte	0x8
 725 008c 04       		.byte	0x4
 726 008d 93020000 		.4byte	.LASF12
 727 0091 02       		.uleb128 0x2
 728 0092 01       		.byte	0x1
 729 0093 08       		.byte	0x8
 730 0094 1E010000 		.4byte	.LASF13
 731 0098 04       		.uleb128 0x4
 732 0099 19020000 		.4byte	.LASF14
 733 009d 02       		.byte	0x2
 734 009e 3C02     		.2byte	0x23c
 735 00a0 A4000000 		.4byte	0xa4
 736 00a4 05       		.uleb128 0x5
 737 00a5 6B000000 		.4byte	0x6b
 738 00a9 04       		.uleb128 0x4
 739 00aa B6030000 		.4byte	.LASF15
 740 00ae 02       		.byte	0x2
 741 00af 3E02     		.2byte	0x23e
 742 00b1 B5000000 		.4byte	0xb5
 743 00b5 05       		.uleb128 0x5
 744 00b6 77000000 		.4byte	0x77
 745 00ba 02       		.uleb128 0x2
 746 00bb 08       		.byte	0x8
 747 00bc 04       		.byte	0x4
 748 00bd BC030000 		.4byte	.LASF16
 749 00c1 02       		.uleb128 0x2
 750 00c2 04       		.byte	0x4
 751 00c3 07       		.byte	0x7
 752 00c4 10030000 		.4byte	.LASF17
 753 00c8 06       		.uleb128 0x6
 754 00c9 F5010000 		.4byte	.LASF21
 755 00cd 01       		.byte	0x1
 756 00ce 2B       		.byte	0x2b
 757 00cf 00000000 		.4byte	.LFB0
 758 00d3 4C000000 		.4byte	.LFE0-.LFB0
 759 00d7 01       		.uleb128 0x1
 760 00d8 9C       		.byte	0x9c
 761 00d9 EC000000 		.4byte	0xec
 762 00dd 07       		.uleb128 0x7
 763 00de 4B030000 		.4byte	.LASF40
 764 00e2 01       		.byte	0x1
 765 00e3 2F       		.byte	0x2f
 766 00e4 6B000000 		.4byte	0x6b
 767 00e8 02       		.uleb128 0x2
 768 00e9 91       		.byte	0x91
 769 00ea 77       		.sleb128 -9
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 28


 770 00eb 00       		.byte	0
 771 00ec 08       		.uleb128 0x8
 772 00ed 7B020000 		.4byte	.LASF18
 773 00f1 01       		.byte	0x1
 774 00f2 B4       		.byte	0xb4
 775 00f3 00000000 		.4byte	.LFB1
 776 00f7 20000000 		.4byte	.LFE1-.LFB1
 777 00fb 01       		.uleb128 0x1
 778 00fc 9C       		.byte	0x9c
 779 00fd 09       		.uleb128 0x9
 780 00fe ED000000 		.4byte	.LASF19
 781 0102 01       		.byte	0x1
 782 0103 D7       		.byte	0xd7
 783 0104 00000000 		.4byte	.LFB2
 784 0108 24000000 		.4byte	.LFE2-.LFB2
 785 010c 01       		.uleb128 0x1
 786 010d 9C       		.byte	0x9c
 787 010e 08       		.uleb128 0x8
 788 010f DD020000 		.4byte	.LASF20
 789 0113 01       		.byte	0x1
 790 0114 F7       		.byte	0xf7
 791 0115 00000000 		.4byte	.LFB3
 792 0119 20000000 		.4byte	.LFE3-.LFB3
 793 011d 01       		.uleb128 0x1
 794 011e 9C       		.byte	0x9c
 795 011f 0A       		.uleb128 0xa
 796 0120 1E020000 		.4byte	.LASF22
 797 0124 01       		.byte	0x1
 798 0125 1701     		.2byte	0x117
 799 0127 00000000 		.4byte	.LFB4
 800 012b 20000000 		.4byte	.LFE4-.LFB4
 801 012f 01       		.uleb128 0x1
 802 0130 9C       		.byte	0x9c
 803 0131 45010000 		.4byte	0x145
 804 0135 0B       		.uleb128 0xb
 805 0136 6B030000 		.4byte	.LASF27
 806 013a 01       		.byte	0x1
 807 013b 1701     		.2byte	0x117
 808 013d 6B000000 		.4byte	0x6b
 809 0141 02       		.uleb128 0x2
 810 0142 91       		.byte	0x91
 811 0143 77       		.sleb128 -9
 812 0144 00       		.byte	0
 813 0145 0C       		.uleb128 0xc
 814 0146 41010000 		.4byte	.LASF23
 815 014a 01       		.byte	0x1
 816 014b 2E01     		.2byte	0x12e
 817 014d 00000000 		.4byte	.LFB5
 818 0151 14000000 		.4byte	.LFE5-.LFB5
 819 0155 01       		.uleb128 0x1
 820 0156 9C       		.byte	0x9c
 821 0157 0D       		.uleb128 0xd
 822 0158 19030000 		.4byte	.LASF24
 823 015c 01       		.byte	0x1
 824 015d 4D01     		.2byte	0x14d
 825 015f 6B000000 		.4byte	0x6b
 826 0163 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 29


 827 0167 18000000 		.4byte	.LFE6-.LFB6
 828 016b 01       		.uleb128 0x1
 829 016c 9C       		.byte	0x9c
 830 016d 0D       		.uleb128 0xd
 831 016e A1020000 		.4byte	.LASF25
 832 0172 01       		.byte	0x1
 833 0173 6401     		.2byte	0x164
 834 0175 6B000000 		.4byte	0x6b
 835 0179 00000000 		.4byte	.LFB7
 836 017d 18000000 		.4byte	.LFE7-.LFB7
 837 0181 01       		.uleb128 0x1
 838 0182 9C       		.byte	0x9c
 839 0183 0A       		.uleb128 0xa
 840 0184 F1030000 		.4byte	.LASF26
 841 0188 01       		.byte	0x1
 842 0189 7B01     		.2byte	0x17b
 843 018b 00000000 		.4byte	.LFB8
 844 018f 20000000 		.4byte	.LFE8-.LFB8
 845 0193 01       		.uleb128 0x1
 846 0194 9C       		.byte	0x9c
 847 0195 A9010000 		.4byte	0x1a9
 848 0199 0B       		.uleb128 0xb
 849 019a 58020000 		.4byte	.LASF28
 850 019e 01       		.byte	0x1
 851 019f 7B01     		.2byte	0x17b
 852 01a1 6B000000 		.4byte	0x6b
 853 01a5 02       		.uleb128 0x2
 854 01a6 91       		.byte	0x91
 855 01a7 77       		.sleb128 -9
 856 01a8 00       		.byte	0
 857 01a9 0D       		.uleb128 0xd
 858 01aa D1000000 		.4byte	.LASF29
 859 01ae 01       		.byte	0x1
 860 01af 9501     		.2byte	0x195
 861 01b1 77000000 		.4byte	0x77
 862 01b5 00000000 		.4byte	.LFB9
 863 01b9 14000000 		.4byte	.LFE9-.LFB9
 864 01bd 01       		.uleb128 0x1
 865 01be 9C       		.byte	0x9c
 866 01bf 0A       		.uleb128 0xa
 867 01c0 90030000 		.4byte	.LASF30
 868 01c4 01       		.byte	0x1
 869 01c5 AF01     		.2byte	0x1af
 870 01c7 00000000 		.4byte	.LFB10
 871 01cb 1C000000 		.4byte	.LFE10-.LFB10
 872 01cf 01       		.uleb128 0x1
 873 01d0 9C       		.byte	0x9c
 874 01d1 E5010000 		.4byte	0x1e5
 875 01d5 0B       		.uleb128 0xb
 876 01d6 04010000 		.4byte	.LASF31
 877 01da 01       		.byte	0x1
 878 01db AF01     		.2byte	0x1af
 879 01dd 77000000 		.4byte	0x77
 880 01e1 02       		.uleb128 0x2
 881 01e2 91       		.byte	0x91
 882 01e3 74       		.sleb128 -12
 883 01e4 00       		.byte	0
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 30


 884 01e5 0D       		.uleb128 0xd
 885 01e6 D4030000 		.4byte	.LASF32
 886 01ea 01       		.byte	0x1
 887 01eb C801     		.2byte	0x1c8
 888 01ed 77000000 		.4byte	0x77
 889 01f1 00000000 		.4byte	.LFB11
 890 01f5 14000000 		.4byte	.LFE11-.LFB11
 891 01f9 01       		.uleb128 0x1
 892 01fa 9C       		.byte	0x9c
 893 01fb 0A       		.uleb128 0xa
 894 01fc 23010000 		.4byte	.LASF33
 895 0200 01       		.byte	0x1
 896 0201 E001     		.2byte	0x1e0
 897 0203 00000000 		.4byte	.LFB12
 898 0207 1C000000 		.4byte	.LFE12-.LFB12
 899 020b 01       		.uleb128 0x1
 900 020c 9C       		.byte	0x9c
 901 020d 21020000 		.4byte	0x221
 902 0211 0B       		.uleb128 0xb
 903 0212 ED010000 		.4byte	.LASF34
 904 0216 01       		.byte	0x1
 905 0217 E001     		.2byte	0x1e0
 906 0219 77000000 		.4byte	0x77
 907 021d 02       		.uleb128 0x2
 908 021e 91       		.byte	0x91
 909 021f 74       		.sleb128 -12
 910 0220 00       		.byte	0
 911 0221 0D       		.uleb128 0xd
 912 0222 F3020000 		.4byte	.LASF35
 913 0226 01       		.byte	0x1
 914 0227 FC01     		.2byte	0x1fc
 915 0229 77000000 		.4byte	0x77
 916 022d 00000000 		.4byte	.LFB13
 917 0231 1C000000 		.4byte	.LFE13-.LFB13
 918 0235 01       		.uleb128 0x1
 919 0236 9C       		.byte	0x9c
 920 0237 0E       		.uleb128 0xe
 921 0238 60020000 		.4byte	.LASF36
 922 023c 01       		.byte	0x1
 923 023d FB02     		.2byte	0x2fb
 924 023f 00000000 		.4byte	.LFB14
 925 0243 1C000000 		.4byte	.LFE14-.LFB14
 926 0247 01       		.uleb128 0x1
 927 0248 9C       		.byte	0x9c
 928 0249 0F       		.uleb128 0xf
 929 024a 00000000 		.4byte	.LASF41
 930 024e 01       		.byte	0x1
 931 024f 1A       		.byte	0x1a
 932 0250 6B000000 		.4byte	0x6b
 933 0254 05       		.uleb128 0x5
 934 0255 03       		.byte	0x3
 935 0256 00000000 		.4byte	FreeRunningTimer_initVar
 936 025a 00       		.byte	0
 937              		.section	.debug_abbrev,"",%progbits
 938              	.Ldebug_abbrev0:
 939 0000 01       		.uleb128 0x1
 940 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 31


 941 0002 01       		.byte	0x1
 942 0003 25       		.uleb128 0x25
 943 0004 0E       		.uleb128 0xe
 944 0005 13       		.uleb128 0x13
 945 0006 0B       		.uleb128 0xb
 946 0007 03       		.uleb128 0x3
 947 0008 0E       		.uleb128 0xe
 948 0009 1B       		.uleb128 0x1b
 949 000a 0E       		.uleb128 0xe
 950 000b 55       		.uleb128 0x55
 951 000c 17       		.uleb128 0x17
 952 000d 11       		.uleb128 0x11
 953 000e 01       		.uleb128 0x1
 954 000f 10       		.uleb128 0x10
 955 0010 17       		.uleb128 0x17
 956 0011 00       		.byte	0
 957 0012 00       		.byte	0
 958 0013 02       		.uleb128 0x2
 959 0014 24       		.uleb128 0x24
 960 0015 00       		.byte	0
 961 0016 0B       		.uleb128 0xb
 962 0017 0B       		.uleb128 0xb
 963 0018 3E       		.uleb128 0x3e
 964 0019 0B       		.uleb128 0xb
 965 001a 03       		.uleb128 0x3
 966 001b 0E       		.uleb128 0xe
 967 001c 00       		.byte	0
 968 001d 00       		.byte	0
 969 001e 03       		.uleb128 0x3
 970 001f 24       		.uleb128 0x24
 971 0020 00       		.byte	0
 972 0021 0B       		.uleb128 0xb
 973 0022 0B       		.uleb128 0xb
 974 0023 3E       		.uleb128 0x3e
 975 0024 0B       		.uleb128 0xb
 976 0025 03       		.uleb128 0x3
 977 0026 08       		.uleb128 0x8
 978 0027 00       		.byte	0
 979 0028 00       		.byte	0
 980 0029 04       		.uleb128 0x4
 981 002a 16       		.uleb128 0x16
 982 002b 00       		.byte	0
 983 002c 03       		.uleb128 0x3
 984 002d 0E       		.uleb128 0xe
 985 002e 3A       		.uleb128 0x3a
 986 002f 0B       		.uleb128 0xb
 987 0030 3B       		.uleb128 0x3b
 988 0031 05       		.uleb128 0x5
 989 0032 49       		.uleb128 0x49
 990 0033 13       		.uleb128 0x13
 991 0034 00       		.byte	0
 992 0035 00       		.byte	0
 993 0036 05       		.uleb128 0x5
 994 0037 35       		.uleb128 0x35
 995 0038 00       		.byte	0
 996 0039 49       		.uleb128 0x49
 997 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 32


 998 003b 00       		.byte	0
 999 003c 00       		.byte	0
 1000 003d 06       		.uleb128 0x6
 1001 003e 2E       		.uleb128 0x2e
 1002 003f 01       		.byte	0x1
 1003 0040 3F       		.uleb128 0x3f
 1004 0041 19       		.uleb128 0x19
 1005 0042 03       		.uleb128 0x3
 1006 0043 0E       		.uleb128 0xe
 1007 0044 3A       		.uleb128 0x3a
 1008 0045 0B       		.uleb128 0xb
 1009 0046 3B       		.uleb128 0x3b
 1010 0047 0B       		.uleb128 0xb
 1011 0048 27       		.uleb128 0x27
 1012 0049 19       		.uleb128 0x19
 1013 004a 11       		.uleb128 0x11
 1014 004b 01       		.uleb128 0x1
 1015 004c 12       		.uleb128 0x12
 1016 004d 06       		.uleb128 0x6
 1017 004e 40       		.uleb128 0x40
 1018 004f 18       		.uleb128 0x18
 1019 0050 9642     		.uleb128 0x2116
 1020 0052 19       		.uleb128 0x19
 1021 0053 01       		.uleb128 0x1
 1022 0054 13       		.uleb128 0x13
 1023 0055 00       		.byte	0
 1024 0056 00       		.byte	0
 1025 0057 07       		.uleb128 0x7
 1026 0058 34       		.uleb128 0x34
 1027 0059 00       		.byte	0
 1028 005a 03       		.uleb128 0x3
 1029 005b 0E       		.uleb128 0xe
 1030 005c 3A       		.uleb128 0x3a
 1031 005d 0B       		.uleb128 0xb
 1032 005e 3B       		.uleb128 0x3b
 1033 005f 0B       		.uleb128 0xb
 1034 0060 49       		.uleb128 0x49
 1035 0061 13       		.uleb128 0x13
 1036 0062 02       		.uleb128 0x2
 1037 0063 18       		.uleb128 0x18
 1038 0064 00       		.byte	0
 1039 0065 00       		.byte	0
 1040 0066 08       		.uleb128 0x8
 1041 0067 2E       		.uleb128 0x2e
 1042 0068 00       		.byte	0
 1043 0069 3F       		.uleb128 0x3f
 1044 006a 19       		.uleb128 0x19
 1045 006b 03       		.uleb128 0x3
 1046 006c 0E       		.uleb128 0xe
 1047 006d 3A       		.uleb128 0x3a
 1048 006e 0B       		.uleb128 0xb
 1049 006f 3B       		.uleb128 0x3b
 1050 0070 0B       		.uleb128 0xb
 1051 0071 27       		.uleb128 0x27
 1052 0072 19       		.uleb128 0x19
 1053 0073 11       		.uleb128 0x11
 1054 0074 01       		.uleb128 0x1
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 33


 1055 0075 12       		.uleb128 0x12
 1056 0076 06       		.uleb128 0x6
 1057 0077 40       		.uleb128 0x40
 1058 0078 18       		.uleb128 0x18
 1059 0079 9742     		.uleb128 0x2117
 1060 007b 19       		.uleb128 0x19
 1061 007c 00       		.byte	0
 1062 007d 00       		.byte	0
 1063 007e 09       		.uleb128 0x9
 1064 007f 2E       		.uleb128 0x2e
 1065 0080 00       		.byte	0
 1066 0081 3F       		.uleb128 0x3f
 1067 0082 19       		.uleb128 0x19
 1068 0083 03       		.uleb128 0x3
 1069 0084 0E       		.uleb128 0xe
 1070 0085 3A       		.uleb128 0x3a
 1071 0086 0B       		.uleb128 0xb
 1072 0087 3B       		.uleb128 0x3b
 1073 0088 0B       		.uleb128 0xb
 1074 0089 27       		.uleb128 0x27
 1075 008a 19       		.uleb128 0x19
 1076 008b 11       		.uleb128 0x11
 1077 008c 01       		.uleb128 0x1
 1078 008d 12       		.uleb128 0x12
 1079 008e 06       		.uleb128 0x6
 1080 008f 40       		.uleb128 0x40
 1081 0090 18       		.uleb128 0x18
 1082 0091 9642     		.uleb128 0x2116
 1083 0093 19       		.uleb128 0x19
 1084 0094 00       		.byte	0
 1085 0095 00       		.byte	0
 1086 0096 0A       		.uleb128 0xa
 1087 0097 2E       		.uleb128 0x2e
 1088 0098 01       		.byte	0x1
 1089 0099 3F       		.uleb128 0x3f
 1090 009a 19       		.uleb128 0x19
 1091 009b 03       		.uleb128 0x3
 1092 009c 0E       		.uleb128 0xe
 1093 009d 3A       		.uleb128 0x3a
 1094 009e 0B       		.uleb128 0xb
 1095 009f 3B       		.uleb128 0x3b
 1096 00a0 05       		.uleb128 0x5
 1097 00a1 27       		.uleb128 0x27
 1098 00a2 19       		.uleb128 0x19
 1099 00a3 11       		.uleb128 0x11
 1100 00a4 01       		.uleb128 0x1
 1101 00a5 12       		.uleb128 0x12
 1102 00a6 06       		.uleb128 0x6
 1103 00a7 40       		.uleb128 0x40
 1104 00a8 18       		.uleb128 0x18
 1105 00a9 9742     		.uleb128 0x2117
 1106 00ab 19       		.uleb128 0x19
 1107 00ac 01       		.uleb128 0x1
 1108 00ad 13       		.uleb128 0x13
 1109 00ae 00       		.byte	0
 1110 00af 00       		.byte	0
 1111 00b0 0B       		.uleb128 0xb
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 34


 1112 00b1 05       		.uleb128 0x5
 1113 00b2 00       		.byte	0
 1114 00b3 03       		.uleb128 0x3
 1115 00b4 0E       		.uleb128 0xe
 1116 00b5 3A       		.uleb128 0x3a
 1117 00b6 0B       		.uleb128 0xb
 1118 00b7 3B       		.uleb128 0x3b
 1119 00b8 05       		.uleb128 0x5
 1120 00b9 49       		.uleb128 0x49
 1121 00ba 13       		.uleb128 0x13
 1122 00bb 02       		.uleb128 0x2
 1123 00bc 18       		.uleb128 0x18
 1124 00bd 00       		.byte	0
 1125 00be 00       		.byte	0
 1126 00bf 0C       		.uleb128 0xc
 1127 00c0 2E       		.uleb128 0x2e
 1128 00c1 00       		.byte	0
 1129 00c2 3F       		.uleb128 0x3f
 1130 00c3 19       		.uleb128 0x19
 1131 00c4 03       		.uleb128 0x3
 1132 00c5 0E       		.uleb128 0xe
 1133 00c6 3A       		.uleb128 0x3a
 1134 00c7 0B       		.uleb128 0xb
 1135 00c8 3B       		.uleb128 0x3b
 1136 00c9 05       		.uleb128 0x5
 1137 00ca 27       		.uleb128 0x27
 1138 00cb 19       		.uleb128 0x19
 1139 00cc 11       		.uleb128 0x11
 1140 00cd 01       		.uleb128 0x1
 1141 00ce 12       		.uleb128 0x12
 1142 00cf 06       		.uleb128 0x6
 1143 00d0 40       		.uleb128 0x40
 1144 00d1 18       		.uleb128 0x18
 1145 00d2 9742     		.uleb128 0x2117
 1146 00d4 19       		.uleb128 0x19
 1147 00d5 00       		.byte	0
 1148 00d6 00       		.byte	0
 1149 00d7 0D       		.uleb128 0xd
 1150 00d8 2E       		.uleb128 0x2e
 1151 00d9 00       		.byte	0
 1152 00da 3F       		.uleb128 0x3f
 1153 00db 19       		.uleb128 0x19
 1154 00dc 03       		.uleb128 0x3
 1155 00dd 0E       		.uleb128 0xe
 1156 00de 3A       		.uleb128 0x3a
 1157 00df 0B       		.uleb128 0xb
 1158 00e0 3B       		.uleb128 0x3b
 1159 00e1 05       		.uleb128 0x5
 1160 00e2 27       		.uleb128 0x27
 1161 00e3 19       		.uleb128 0x19
 1162 00e4 49       		.uleb128 0x49
 1163 00e5 13       		.uleb128 0x13
 1164 00e6 11       		.uleb128 0x11
 1165 00e7 01       		.uleb128 0x1
 1166 00e8 12       		.uleb128 0x12
 1167 00e9 06       		.uleb128 0x6
 1168 00ea 40       		.uleb128 0x40
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 35


 1169 00eb 18       		.uleb128 0x18
 1170 00ec 9742     		.uleb128 0x2117
 1171 00ee 19       		.uleb128 0x19
 1172 00ef 00       		.byte	0
 1173 00f0 00       		.byte	0
 1174 00f1 0E       		.uleb128 0xe
 1175 00f2 2E       		.uleb128 0x2e
 1176 00f3 00       		.byte	0
 1177 00f4 3F       		.uleb128 0x3f
 1178 00f5 19       		.uleb128 0x19
 1179 00f6 03       		.uleb128 0x3
 1180 00f7 0E       		.uleb128 0xe
 1181 00f8 3A       		.uleb128 0x3a
 1182 00f9 0B       		.uleb128 0xb
 1183 00fa 3B       		.uleb128 0x3b
 1184 00fb 05       		.uleb128 0x5
 1185 00fc 27       		.uleb128 0x27
 1186 00fd 19       		.uleb128 0x19
 1187 00fe 11       		.uleb128 0x11
 1188 00ff 01       		.uleb128 0x1
 1189 0100 12       		.uleb128 0x12
 1190 0101 06       		.uleb128 0x6
 1191 0102 40       		.uleb128 0x40
 1192 0103 18       		.uleb128 0x18
 1193 0104 9642     		.uleb128 0x2116
 1194 0106 19       		.uleb128 0x19
 1195 0107 00       		.byte	0
 1196 0108 00       		.byte	0
 1197 0109 0F       		.uleb128 0xf
 1198 010a 34       		.uleb128 0x34
 1199 010b 00       		.byte	0
 1200 010c 03       		.uleb128 0x3
 1201 010d 0E       		.uleb128 0xe
 1202 010e 3A       		.uleb128 0x3a
 1203 010f 0B       		.uleb128 0xb
 1204 0110 3B       		.uleb128 0x3b
 1205 0111 0B       		.uleb128 0xb
 1206 0112 49       		.uleb128 0x49
 1207 0113 13       		.uleb128 0x13
 1208 0114 3F       		.uleb128 0x3f
 1209 0115 19       		.uleb128 0x19
 1210 0116 02       		.uleb128 0x2
 1211 0117 18       		.uleb128 0x18
 1212 0118 00       		.byte	0
 1213 0119 00       		.byte	0
 1214 011a 00       		.byte	0
 1215              		.section	.debug_aranges,"",%progbits
 1216 0000 8C000000 		.4byte	0x8c
 1217 0004 0200     		.2byte	0x2
 1218 0006 00000000 		.4byte	.Ldebug_info0
 1219 000a 04       		.byte	0x4
 1220 000b 00       		.byte	0
 1221 000c 0000     		.2byte	0
 1222 000e 0000     		.2byte	0
 1223 0010 00000000 		.4byte	.LFB0
 1224 0014 4C000000 		.4byte	.LFE0-.LFB0
 1225 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 36


 1226 001c 20000000 		.4byte	.LFE1-.LFB1
 1227 0020 00000000 		.4byte	.LFB2
 1228 0024 24000000 		.4byte	.LFE2-.LFB2
 1229 0028 00000000 		.4byte	.LFB3
 1230 002c 20000000 		.4byte	.LFE3-.LFB3
 1231 0030 00000000 		.4byte	.LFB4
 1232 0034 20000000 		.4byte	.LFE4-.LFB4
 1233 0038 00000000 		.4byte	.LFB5
 1234 003c 14000000 		.4byte	.LFE5-.LFB5
 1235 0040 00000000 		.4byte	.LFB6
 1236 0044 18000000 		.4byte	.LFE6-.LFB6
 1237 0048 00000000 		.4byte	.LFB7
 1238 004c 18000000 		.4byte	.LFE7-.LFB7
 1239 0050 00000000 		.4byte	.LFB8
 1240 0054 20000000 		.4byte	.LFE8-.LFB8
 1241 0058 00000000 		.4byte	.LFB9
 1242 005c 14000000 		.4byte	.LFE9-.LFB9
 1243 0060 00000000 		.4byte	.LFB10
 1244 0064 1C000000 		.4byte	.LFE10-.LFB10
 1245 0068 00000000 		.4byte	.LFB11
 1246 006c 14000000 		.4byte	.LFE11-.LFB11
 1247 0070 00000000 		.4byte	.LFB12
 1248 0074 1C000000 		.4byte	.LFE12-.LFB12
 1249 0078 00000000 		.4byte	.LFB13
 1250 007c 1C000000 		.4byte	.LFE13-.LFB13
 1251 0080 00000000 		.4byte	.LFB14
 1252 0084 1C000000 		.4byte	.LFE14-.LFB14
 1253 0088 00000000 		.4byte	0
 1254 008c 00000000 		.4byte	0
 1255              		.section	.debug_ranges,"",%progbits
 1256              	.Ldebug_ranges0:
 1257 0000 00000000 		.4byte	.LFB0
 1258 0004 4C000000 		.4byte	.LFE0
 1259 0008 00000000 		.4byte	.LFB1
 1260 000c 20000000 		.4byte	.LFE1
 1261 0010 00000000 		.4byte	.LFB2
 1262 0014 24000000 		.4byte	.LFE2
 1263 0018 00000000 		.4byte	.LFB3
 1264 001c 20000000 		.4byte	.LFE3
 1265 0020 00000000 		.4byte	.LFB4
 1266 0024 20000000 		.4byte	.LFE4
 1267 0028 00000000 		.4byte	.LFB5
 1268 002c 14000000 		.4byte	.LFE5
 1269 0030 00000000 		.4byte	.LFB6
 1270 0034 18000000 		.4byte	.LFE6
 1271 0038 00000000 		.4byte	.LFB7
 1272 003c 18000000 		.4byte	.LFE7
 1273 0040 00000000 		.4byte	.LFB8
 1274 0044 20000000 		.4byte	.LFE8
 1275 0048 00000000 		.4byte	.LFB9
 1276 004c 14000000 		.4byte	.LFE9
 1277 0050 00000000 		.4byte	.LFB10
 1278 0054 1C000000 		.4byte	.LFE10
 1279 0058 00000000 		.4byte	.LFB11
 1280 005c 14000000 		.4byte	.LFE11
 1281 0060 00000000 		.4byte	.LFB12
 1282 0064 1C000000 		.4byte	.LFE12
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 37


 1283 0068 00000000 		.4byte	.LFB13
 1284 006c 1C000000 		.4byte	.LFE13
 1285 0070 00000000 		.4byte	.LFB14
 1286 0074 1C000000 		.4byte	.LFE14
 1287 0078 00000000 		.4byte	0
 1288 007c 00000000 		.4byte	0
 1289              		.section	.debug_line,"",%progbits
 1290              	.Ldebug_line0:
 1291 0000 75010000 		.section	.debug_str,"MS",%progbits,1
 1291      02004D00 
 1291      00000201 
 1291      FB0E0D00 
 1291      01010101 
 1292              	.LASF41:
 1293 0000 46726565 		.ascii	"FreeRunningTimer_initVar\000"
 1293      52756E6E 
 1293      696E6754 
 1293      696D6572 
 1293      5F696E69 
 1294              	.LASF37:
 1295 0019 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1295      43313120 
 1295      352E342E 
 1295      31203230 
 1295      31363036 
 1296 004c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1296      20726576 
 1296      6973696F 
 1296      6E203233 
 1296      37373135 
 1297 007f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1297      66756E63 
 1297      74696F6E 
 1297      2D736563 
 1297      74696F6E 
 1298              	.LASF38:
 1299 00a7 47656E65 		.ascii	"Generated_Source\\PSoC5\\FreeRunningTimer.c\000"
 1299      72617465 
 1299      645F536F 
 1299      75726365 
 1299      5C50536F 
 1300              	.LASF29:
 1301 00d1 46726565 		.ascii	"FreeRunningTimer_ReadPeriod\000"
 1301      52756E6E 
 1301      696E6754 
 1301      696D6572 
 1301      5F526561 
 1302              	.LASF19:
 1303 00ed 46726565 		.ascii	"FreeRunningTimer_Start\000"
 1303      52756E6E 
 1303      696E6754 
 1303      696D6572 
 1303      5F537461 
 1304              	.LASF31:
 1305 0104 70657269 		.ascii	"period\000"
 1305      6F6400
 1306              	.LASF3:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 38


 1307 010b 73686F72 		.ascii	"short unsigned int\000"
 1307      7420756E 
 1307      7369676E 
 1307      65642069 
 1307      6E7400
 1308              	.LASF13:
 1309 011e 63686172 		.ascii	"char\000"
 1309      00
 1310              	.LASF33:
 1311 0123 46726565 		.ascii	"FreeRunningTimer_WriteCounter\000"
 1311      52756E6E 
 1311      696E6754 
 1311      696D6572 
 1311      5F577269 
 1312              	.LASF23:
 1313 0141 46726565 		.ascii	"FreeRunningTimer_SoftwareCapture\000"
 1313      52756E6E 
 1313      696E6754 
 1313      696D6572 
 1313      5F536F66 
 1314              	.LASF39:
 1315 0162 433A5C55 		.ascii	"C:\\Users\\tpbw4321\\AppData\\Roaming\\SPB_Data\\Hy"
 1315      73657273 
 1315      5C747062 
 1315      77343332 
 1315      315C4170 
 1316 018f 64726F70 		.ascii	"droponicsAutomation\\Designs\\Software\\Embedded\\P"
 1316      6F6E6963 
 1316      73417574 
 1316      6F6D6174 
 1316      696F6E5C 
 1317 01be 536F435C 		.ascii	"SoC\\HydroponicAutomationSensorPerf.cydsn\000"
 1317      48796472 
 1317      6F706F6E 
 1317      69634175 
 1317      746F6D61 
 1318              	.LASF11:
 1319 01e7 666C6F61 		.ascii	"float\000"
 1319      7400
 1320              	.LASF34:
 1321 01ed 636F756E 		.ascii	"counter\000"
 1321      74657200 
 1322              	.LASF21:
 1323 01f5 46726565 		.ascii	"FreeRunningTimer_Init\000"
 1323      52756E6E 
 1323      696E6754 
 1323      696D6572 
 1323      5F496E69 
 1324              	.LASF1:
 1325 020b 756E7369 		.ascii	"unsigned char\000"
 1325      676E6564 
 1325      20636861 
 1325      7200
 1326              	.LASF14:
 1327 0219 72656738 		.ascii	"reg8\000"
 1327      00
 1328              	.LASF22:
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 39


 1329 021e 46726565 		.ascii	"FreeRunningTimer_SetInterruptMode\000"
 1329      52756E6E 
 1329      696E6754 
 1329      696D6572 
 1329      5F536574 
 1330              	.LASF5:
 1331 0240 6C6F6E67 		.ascii	"long unsigned int\000"
 1331      20756E73 
 1331      69676E65 
 1331      6420696E 
 1331      7400
 1332              	.LASF9:
 1333 0252 75696E74 		.ascii	"uint8\000"
 1333      3800
 1334              	.LASF28:
 1335 0258 636F6E74 		.ascii	"control\000"
 1335      726F6C00 
 1336              	.LASF36:
 1337 0260 46726565 		.ascii	"FreeRunningTimer_ClearFIFO\000"
 1337      52756E6E 
 1337      696E6754 
 1337      696D6572 
 1337      5F436C65 
 1338              	.LASF18:
 1339 027b 46726565 		.ascii	"FreeRunningTimer_Enable\000"
 1339      52756E6E 
 1339      696E6754 
 1339      696D6572 
 1339      5F456E61 
 1340              	.LASF12:
 1341 0293 646F7562 		.ascii	"double\000"
 1341      6C6500
 1342              	.LASF10:
 1343 029a 75696E74 		.ascii	"uint32\000"
 1343      333200
 1344              	.LASF25:
 1345 02a1 46726565 		.ascii	"FreeRunningTimer_ReadControlRegister\000"
 1345      52756E6E 
 1345      696E6754 
 1345      696D6572 
 1345      5F526561 
 1346              	.LASF7:
 1347 02c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1347      206C6F6E 
 1347      6720756E 
 1347      7369676E 
 1347      65642069 
 1348              	.LASF20:
 1349 02dd 46726565 		.ascii	"FreeRunningTimer_Stop\000"
 1349      52756E6E 
 1349      696E6754 
 1349      696D6572 
 1349      5F53746F 
 1350              	.LASF35:
 1351 02f3 46726565 		.ascii	"FreeRunningTimer_ReadCounter\000"
 1351      52756E6E 
 1351      696E6754 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 40


 1351      696D6572 
 1351      5F526561 
 1352              	.LASF17:
 1353 0310 73697A65 		.ascii	"sizetype\000"
 1353      74797065 
 1353      00
 1354              	.LASF24:
 1355 0319 46726565 		.ascii	"FreeRunningTimer_ReadStatusRegister\000"
 1355      52756E6E 
 1355      696E6754 
 1355      696D6572 
 1355      5F526561 
 1356              	.LASF6:
 1357 033d 6C6F6E67 		.ascii	"long long int\000"
 1357      206C6F6E 
 1357      6720696E 
 1357      7400
 1358              	.LASF40:
 1359 034b 46726565 		.ascii	"FreeRunningTimer_interruptState\000"
 1359      52756E6E 
 1359      696E6754 
 1359      696D6572 
 1359      5F696E74 
 1360              	.LASF27:
 1361 036b 696E7465 		.ascii	"interruptMode\000"
 1361      72727570 
 1361      744D6F64 
 1361      6500
 1362              	.LASF8:
 1363 0379 756E7369 		.ascii	"unsigned int\000"
 1363      676E6564 
 1363      20696E74 
 1363      00
 1364              	.LASF2:
 1365 0386 73686F72 		.ascii	"short int\000"
 1365      7420696E 
 1365      7400
 1366              	.LASF30:
 1367 0390 46726565 		.ascii	"FreeRunningTimer_WritePeriod\000"
 1367      52756E6E 
 1367      696E6754 
 1367      696D6572 
 1367      5F577269 
 1368              	.LASF4:
 1369 03ad 6C6F6E67 		.ascii	"long int\000"
 1369      20696E74 
 1369      00
 1370              	.LASF15:
 1371 03b6 72656733 		.ascii	"reg32\000"
 1371      3200
 1372              	.LASF16:
 1373 03bc 6C6F6E67 		.ascii	"long double\000"
 1373      20646F75 
 1373      626C6500 
 1374              	.LASF0:
 1375 03c8 7369676E 		.ascii	"signed char\000"
 1375      65642063 
ARM GAS  C:\Users\tpbw4321\AppData\Local\Temp\ccC56ZeS.s 			page 41


 1375      68617200 
 1376              	.LASF32:
 1377 03d4 46726565 		.ascii	"FreeRunningTimer_ReadCapture\000"
 1377      52756E6E 
 1377      696E6754 
 1377      696D6572 
 1377      5F526561 
 1378              	.LASF26:
 1379 03f1 46726565 		.ascii	"FreeRunningTimer_WriteControlRegister\000"
 1379      52756E6E 
 1379      696E6754 
 1379      696D6572 
 1379      5F577269 
 1380              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
